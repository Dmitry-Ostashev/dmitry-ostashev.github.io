{"pageProps":{"content":{"html":"        <h1>How to Scroll Web Pages Using TestCafe</h1>\r\n\r\n\r\n<p>If you’re writing functional tests, you may need to scroll tested pages to display specific elements. In this article, we look at several test scenarios to show how TestCafe navigates pages.</p>\r\n\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>In v1.14.0, TestCafe implemented scroll actions:</p>\r\n<ul>\r\n<li><a class=\"xref\" href=\"/documentation/403065/reference/test-api/testcontroller/scroll\">t.scroll</a> - Scrolls to a specified position.</li>\r\n<li><a class=\"xref\" href=\"/documentation/403066/reference/test-api/testcontroller/scrollby\">t.scrollBy</a> - Scrolls a target element or a page (if the element is not specified) by the chosen number of pixels.</li>\r\n<li><a class=\"xref\" href=\"/documentation/403067/reference/test-api/testcontroller/scrollintoview\">t.scrollIntoView</a> - Scrolls a target element into view.</li>\r\n</ul>\r\n</div>\r\n<h2 id=\"built-in-testcafe-actions-scroll-the-page-automatically__$\"><a class=\"anchor-fix\" href=\"#built-in-testcafe-actions-scroll-the-page-automatically\" id=\"built-in-testcafe-actions-scroll-the-page-automatically\"></a>Built-in TestCafe Actions Scroll the Page Automatically<a class=\"anchor-hash\" href=\"#built-in-testcafe-actions-scroll-the-page-automatically\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Each TestCafe API action scrolls a page to show the target element. You don’t need to write extra code to click a button or input text. Simply pass a selector to the action method. TestCafe will automatically scroll to the element and execute the action.</p>\r\n<pre><code class=\"lang-js\">// scroll to the &quot;#submit-btn&quot; element and click it\r\nawait t.click(&#39;#submit-btn&#39;);\r\n</code></pre><h2 id=\"scroll-to-a-rendered-dom-element__$\"><a class=\"anchor-fix\" href=\"#scroll-to-a-rendered-dom-element\" id=\"scroll-to-a-rendered-dom-element\"></a>Scroll to a Rendered DOM Element<a class=\"anchor-hash\" href=\"#scroll-to-a-rendered-dom-element\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>If you need to scroll a page to display a specific element or area, but don’t need to perform an action on the target element, use the <a class=\"xref\" href=\"/documentation/402697/reference/test-api/testcontroller/hover\">hover</a> method.</p>\r\n<pre><code class=\"lang-js\">// scroll to the &quot;#country-map&quot; element\r\nawait t.hover(&#39;#country-map&#39;);\r\n</code></pre><h2 id=\"scroll-to-a-dynamically-generated-element__$\"><a class=\"anchor-fix\" href=\"#scroll-to-a-dynamically-generated-element\" id=\"scroll-to-a-dynamically-generated-element\"></a>Scroll to a Dynamically Generated Element<a class=\"anchor-hash\" href=\"#scroll-to-a-dynamically-generated-element\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>In certain scenarios, elements cannot be identified by a selector. For instance, a page may contain a dynamically generated list of identical items. Another example is virtual scrolling: the element might not exist on a page when the action starts.</p>\r\n<p>A solution in these cases is to use the browser’s native API. For example, you can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollBy\" target=\"_blank\">window.scrollBy<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> method. To access this method, utilize the <a class=\"xref\" href=\"/documentation/402789/reference/test-api/clientfunction/constructor\">ClientFunction</a> generator. Calculate the offset between the element and the top of the container, and pass these values to the scrollBy method.</p>\r\n<pre><code class=\"lang-js\">import { ClientFunction } from &#39;testcafe&#39;;\r\n\r\nfixture `Fixture`\r\n   .page `https://github.com/DevExpress/testcafe`;\r\n\r\nconst scrollBy = ClientFunction((x, y) =&gt; {\r\n   window.scrollBy(x, y);\r\n});\r\n\r\ntest(`test`, async t =&gt; {\r\n   const targetElementPosition = // ...\r\n\r\n   await scrollBy(0, targetElementPosition);\r\n\r\n   await t.debug();\r\n});\r\n</code></pre><p>Sometimes offset calculation is not an option. If a page uses virtual scrolling, element heights can change. You may not even know the number of elements above the element to be displayed. You might only know the element’s content, such as its display text.</p>\r\n<p>To find an element by text, scroll to the last rendered item on the list so that the next portion of elements are loaded. Continue the process until you locate the element. A selector’s <a class=\"xref\" href=\"/documentation/403654/recipes/basics/selector-recipes#use-selectors-to-check-if-an-element-exists\">exists</a> property allows you to scan rendered elements and see if an element with that text exists. If it does exist, the search is over. If not, repeat the cycle.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `Getting Started`\r\n    .page(&#39;https://bvaughn.github.io/react-virtualized/#/components/List&#39;)\r\n\r\ntest(&#39;Test 1&#39;, async t =&gt; {\r\n    const container  = Selector(&#39;._1oXCrgdVudv-QMFo7eQCLb&#39;);\r\n    const listItem   = Selector(&#39;._113CIjCFcgg_BK6pEtLzCZ&#39;);\r\n    const targetItem = listItem.withExactText(&#39;Tisha Wurster&#39;);\r\n\r\n    await t.click(container);\r\n\r\n    while (!await targetItem.exists) {\r\n        const bottomItemIndex = await listItem.count -1;\r\n        const bottomItemText  = await listItem.nth(bottomItemIndex).textContent;\r\n        const bottomItem      = await listItem.withExactText(bottomItemText);\r\n\r\n        await t.hover(bottomItem);\r\n    }\r\n\r\n    await t\r\n        .hover(targetItem)\r\n        .click(targetItem);\r\n\r\n    await t.debug();\r\n});\r\n</code></pre><p>We hope you find these tips useful.</p>\r\n<p>Want to learn more about TestCafe? Feel free to mention <a href=\"https://twitter.com/DXTestCafe\" target=\"_blank\">@DXTestCafe<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> on Twitter and suggest a topic for the next post.</p>\r\n","headers":[{"title":"Built-in TestCafe Actions Scroll the Page Automatically","tagName":"h2","id":"built-in-testcafe-actions-scroll-the-page-automatically","lvl":2},{"title":"Scroll to a Rendered DOM Element","tagName":"h2","id":"scroll-to-a-rendered-dom-element","lvl":2},{"title":"Scroll to a Dynamically Generated Element","tagName":"h2","id":"scroll-to-a-dynamically-generated-element","lvl":2}],"title":"How to Scroll Web Pages Using TestCafe","schema":null,"author":"Alexander Prokhorov, Anastasia Karabanova","preview":"<p>If you’re writing functional tests, you may need to scroll tested pages to display specific elements. In this article, we look at several test scenarios to show how TestCafe navigates pages.</p>","description":"If you’re writing functional tests, you may need to scroll tested pages to display specific elements. In this article, we look at several test scenarios to show","published":"2020-4-20","hidden":false,"externalUrl":"https://www.devexpress.com/MyAccount/LogIn?returnUrl=undefined"},"topicUid":"402893","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Docs","id":"Docs","url":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog","items":[]}],"activeItems":[{"name":"Resources","id":"Resources"},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"How to Scroll Web Pages Using TestCafe","id":"402893","url":"/402893/resources/blog/2020-4-20-how-to-scroll-web-pages-using-testcafe"}]},"sidebarNav":{"root":{"name":"Resources","id":"Resources"},"items":[{"name":"Resources","id":"Resources","items":[{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog","items":[{"name":"The Fastest Way to Your Next Test – TestCafe + TestCafe Studio - Q&As","id":"402902","url":"/402902/resources/blog/2020-09-24-the-fastest-way-to-your-next-test-qa"},{"name":"Upcoming Webinar: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402903","url":"/402903/resources/blog/2020-11-17-upcoming-webinar-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Client Functions and Script Injection for Page Interaction","id":"402908","url":"/402908/resources/blog/2020-11-18-client-functions-and-script-injection-for-page-interaction"},{"name":"Webinar Recording: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402906","url":"/402906/resources/blog/2020-12-11-webinar-recording-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Randomize Your End-to-End Tests: How to Generate Input Data for TestCafe","id":"402905","url":"/402905/resources/blog/2020-12-28-randomize-your-end-to-end-tests-how-to-generate-input-data-for-testcafe"},{"name":"How to Scroll Web Pages Using TestCafe","id":"402893","url":"/402893/resources/blog/2020-4-20-how-to-scroll-web-pages-using-testcafe"},{"name":"How to Debug Tests in TestCafe: Quick Guide","id":"402894","url":"/402894/resources/blog/2020-5-25-how-to-debug-tests-in-testcafe-quick-guide"},{"name":"How to Speed up Debugging in TestCafe: Tips and Tricks","id":"402895","url":"/402895/resources/blog/2020-6-30-how-to-speed-up-debugging-in-testcafe-tips-and-tricks"},{"name":"Upcoming Webinar: 10 Ways to Simplify Your UI Testing","id":"402896","url":"/402896/resources/blog/2020-7-14-10-ways-to-simplify-your-ui-testing"},{"name":"Introducing the TestCafe Jenkins Plugin","id":"402897","url":"/402897/resources/blog/2020-7-29-introducing-the-testcafe-jenkins-plugin"},{"name":"TestCafe Webinar - Your Questions Answered","id":"402898","url":"/402898/resources/blog/2020-8-19-testcafe-webinar-your-questions-answered"},{"name":"Upcoming Webinar: The Fastest Way to Your Next Test – TestCafe + TestCafe Studio","id":"402899","url":"/402899/resources/blog/2020-8-21-the-fastest-way-to-your-next-test"},{"name":"Introducing Multi-window Tests (Beta)","id":"402900","url":"/402900/resources/blog/2020-8-26-introducing-multi-window-tests-beta"},{"name":"How TestCafe Can Help You to Deliver Faster","id":"402901","url":"/402901/resources/blog/2020-9-3-how-testcafe-can-help-you-to-deliver-faster"},{"name":"Upcoming Roundtable: Modern Web Testing with TestCafe","id":"402904","url":"/402904/resources/blog/2021-2-9-modern-web-testing-with-testcafe"},{"name":"Nächste Woche: Deutscher Live-Stream zu TestCafe mit Gregor Biswanger","id":"403292","url":"/403292/resources/blog/2021-7-14-naechste-woche-deutscher-live-stream"},{"name":"Case study: How Medinas started deploying every day by using TestCafe","id":"403422","url":"/403422/resources/blog/2021-9-22-how-medinas-started-deploying-every-day"},{"name":"TestCafe Dashboard (Alpha): Be the First to Explore its Capabilities","id":"403442","url":"/403442/resources/blog/2021-10-7-dashboard-alpha-invitation-announce"},{"name":"Case study: How Neos CMS Increased Reliability and Confidence with E2E testing and TestCafe","id":"403571","url":"/403571/resources/blog/2021-11-17-how-neos-cms-increased-reliability-and-confidence-with-e2e-testing-and-testcafe"},{"name":"The 2022 TestCafe Survey: Let us know what you think!","id":"404008","url":"/404008/resources/blog/2022-7-12-2022-testcafe-survey-let-us-know-what-you-think"},{"name":"From TestCafe 1.0 to TestCafe 2.0: 11 Most Notable Enhancements","id":"404059","url":"/404059/resources/blog/2022-8-31-from-testcafe-10-to-testcafe-20-11-most-notable-enhancements"},{"name":"Case study: SurveyJS — Test-Driven Development with TestCafe","id":"404146","url":"/404146/resources/blog/2022-11-01-surveyjs-case-study"},{"name":"Selector DOs and DON'Ts: 10 Essential Rules for TestCafe developers (+ FREE Cheat Sheet)","id":"404373","url":"/404373/resources/blog/2023-4-10-selector-dos-donts"}]},{"name":"Community Blogs","id":"Resources/Community Blogs","url":"/resources/community-blogs","href":"/resources/community-blogs"},{"name":"Courses","id":"Resources/Courses","url":"/resources/courses","href":"/resources/courses"},{"name":"Books","id":"Resources/Books","url":"/resources/books","href":"/resources/books"}]}],"activeItems":[{"name":"Resources","id":"Resources"},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"How to Scroll Web Pages Using TestCafe","id":"402893","url":"/402893/resources/blog/2020-4-20-how-to-scroll-web-pages-using-testcafe"}],"showLeafs":false},"breadcrumbsNav":[{"name":"Resources","id":"Resources"},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"How to Scroll Web Pages Using TestCafe","id":"402893","url":"/402893/resources/blog/2020-4-20-how-to-scroll-web-pages-using-testcafe"}],"publishDates":{"teamBlog":[1681084800000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}