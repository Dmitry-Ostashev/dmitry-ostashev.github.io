{"pageProps":{"content":{"html":"<h1>TestCafe Studio v1.3.0 - A New Way to Work with Selectors</h1>\r\n<div class=\"BlogInfo\">\r\n    <div class=\"BlogAvatar\"><a href=\"https://community.devexpre=ss.com/blogs/testcafe/default.aspx\" target=\"_blank\"><img src=\"https://community.devexpres=s.com/sitefiles/1000/Authors/TeamTestCafe.png\" alt=\"TestCafe Team\n                Blog\">\r\n            <= /a>\r\n    </div>\r\n    <div class=\"Properties\">\r\n        <div class=\"Name\"><a href=\"https://community.devexpress=.com/blogs/testcafe/default.aspx\" target=\"_blank\">TestCafe Team\r\n                Blog<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></div>\r\n        <div class=\"RssSubscribe\"><a href=\"https://community.de=vexpress.com/blogs/testcafe/rss.aspx\" target=\"_blank\">RSS<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></div>\r\n        <div class=\"Date\">10 June 2020</div>\r\n    </div>\r\n</div>\r\n<div class=\"BlogPostContent\">\r\n    <p>TestCafe's Visual Test Recorder automatically creates select=\r\n        ors for all elements used in a test. This complicated algorithm balances ma=\r\n        ny different variables, and we just recently added a few options so that yo=\r\n        u can customize it to meet your specific needs.</p>\r\n    <p>This article first covers what we consider to be a reliable selector. We=\r\n        then mention the pros and cons of various selector strategies, and custom =\r\n        attributes in particular. Finally, we'll show you how to customize TestCafe=\r\n        options so that it builds selectors that are optimized for your website.</= p>\r\n\r\n    <h2>How TestCafe Studio Generates Selectors</h2>\r\n\r\n    <p>To record an automated test in TestCafe Studio, specify the tested page=\r\n        =E2=80=99s URL and start the recorder. TestCafe Studio launches the selecte=\r\n        d browser, opens the web page, and records your actions. Once the test scen=\r\n        ario is ready, you can run it in any local browser, a mobile device, or as =\r\n        part of your CI pipeline.</p>\r\n    <p>TestCafe Studio not only records your actions (element clicks, text inpu=\r\n        t), but it also creates a selector for every affected page element. The sel=\r\n        ector generation algorithm was developed to adhere to the following require=\r\n        ments:</p>\r\n\r\n    <ul>\r\n        <li><strong>Selectors shouldn=E2=80=99t be too specific.</strong> Other=\r\n            wise, you might have to rewrite them after each page modification. For inst=\r\n            ance, <em>Selector(=E2=80=98body=E2=80=99).find(=E2=80=98div=E2=80=99).nth(=\r\n                5).find(=E2=80=98p=E2=80=99).nth(3)</em> must be revised each time the numb=\r\n            er of elements on the page changes.</li>\r\n        <li><strong>Selectors shouldn't be too generic.</strong> Otherwise, they ma=\r\n            y return different elements after each markup change. For example, <em>Sele=\r\n                ctor(=E2=80=98div &gt; button=E2=80=99) </em>can match multiple elements at=\r\n            once.</li>\r\n        <li><strong>Selectors shouldn=E2=80=99t rely on element parameters that are=\r\n                likely to change.</strong> For instance, <em>Selector('[style*=\"backgrou=\r\n                nd-color: red\"]') </em>uses a CSS style that changes frequently.</li>\r\n        <li><strong>Selectors should remain readable</strong>. Selectors should be =\r\n            easy to understand (by you or another developer) for as long as the test is=\r\n            maintained. For instance, it may be difficult to understand which element =\r\n            corresponds to the following selector: <em>Selector(=E2=80=98div=E2=80=99).=\r\n                find(=E2=80=98pre=E2=80=99).nextSibling(-1).</em> If you use <em>Selector(=\r\n                =E2=80=98#topContainer=E2=80=99).find(=E2=80=98.child=E2=80=99).withText(=\r\n                =E2=80=98Add item=E2=80=99) </em>instead, the selector is much easier to re=\r\n            ad.</li>\r\n        <li><strong>Selectors should reflect the user=E2=80=99s point of view</stro=>. Since TestCafe supports\r\n                <em>end-to-end</em> testing, it=E2=80=99s a go=\r\n                od idea to build selectors that identify elements as an end-user would. For=\r\n                instance, <em>Selector(=E2=80=98form=E2=80=99).find(=E2=80=98[name=3D=E2=\r\n                    =80=9Dbtn-foo-123=E2=80=9D]=E2=80=99)</em> might be stable, but it is writt=\r\n                en from the programmer=E2=80=99s perspective rather than from the user=E2=\r\n                =80=99s point of view.</li>\r\n    </ul>\r\n\r\n    <p>In addition to these general requirements for selectors, page organizati=\r\n        on is also vital in the testing process. Some pages may have stable selecto=\r\n        rs that rely on the =E2=80=98id=E2=80=99 attribute, while other pages use a=\r\n        uto-generated =E2=80=98id=E2=80=99 attributes - so it does not make sense t=\r\n        o use =E2=80=98id=E2=80=99 in a selector. This also applies to other attrib=\r\n        utes such as =E2=80=98class=E2=80=99. Text-based selectors can also be inef=\r\n        fective, depending on changes you introduce to the page over time.</p>\r\n\r\n    <h2>Why Custom Attributes are Required</h2>\r\n\r\n    <p>Modern web component frameworks, like React, complicate DOM element iden=\r\n        tification. This is why many developers prefer to assign custom attributes =\r\n        to page elements. Custom attributes enable tests to survive changes in HTML=\r\n        structure, script behavior, and styles.</p>\r\n\r\n    <p>Let=E2=80=99s consider the following Populate button on our example page=\r\n        :</p>\r\n    <p></p>\r\n    <pre class=\" language-xml\"><code class=\"  language-xml\"><span c=\"lass=&quot;token\" tag\"=\"\"><span class=\"token tag\"><span class=\"token punctuati=\non\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><spa= n=\"\" class=\"token attr-value\"><span class=\"token punctuation\">=3D</span><s= pan=\"\" class=\"token punctuation\">\"</span>button<span class=\"token punctuat=\nion\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"=&quot;token\" attr-value\"=\"\"><span class=\"token punctuation\">=3D</span><span cla=\"ss=&quot;token\" punctuation\"=\"\">\"</span>populate<span class=\"token punctuation\">=\r\n\"</span></span> <span class=\"token attr-name\">data-testid</span><span cla=\"ss=&quot;token\" attr-value\"=\"\"><span class=\"token punctuation\">=3D</span><span c=\"lass=&quot;token\" punctuation\"=\"\">\"</span>populate-button<span class=\"token punc=\ntuation\">\"</span></span> <span class=\"token attr-name\">value</span><span ==\"\" class=\"token attr-value\"><span class=\"token punctuation\">=3D</span><spa= n=\"\" class=\"token punctuation\">\"</span>Populate<span class=\"token punctuat=\nion\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></c=></pre>\r\n\r\n    <p>You can build the following selectors for this button:</p>\r\n\r\n    <p><strong>HTML-based</strong></p>\r\n    <ul>\r\n        <li><strong>Selector:</strong> <code class=\"legacy\">Selector('input')=\r\n.nth(1)</code><br>\r\n            <strong>Pros and Cons:</strong> Too generic.<br>\r\n            <strong>Summary:</strong> Might match the wrong elements because it=\r\n            is vague.\r\n        </li>\r\n        =20\r\n        <li><strong>Selector:</strong> <code class=\"legacy\">Selector('body').=\r\nfind('form').find('div').find('fieldset').find('input').nth(1)</code><br>\r\n            <strong>Pros and Cons:</strong> Too strict.<br>\r\n            <strong>Summary:</strong> May break due to minor changes in HTML st=\r\n            ructure.\r\n        </li>\r\n    </ul>\r\n\r\n    <p><strong>ID-based</strong></p>\r\n    <ul>\r\n        <li><strong>Selector:</strong> <code class=\"legacy\">Selector('#popula=\r\nte')</code><br>\r\n            <strong>Pros and Cons:</strong> Relies on ID only, which could be i=\r\n            ntroduced for styling or event handling, or may be auto-generated.<br>\r\n            <strong>Summary:</strong> Better options are available.\r\n        </li>\r\n        =20\r\n        <li><strong>Selector:</strong> <code class=\"legacy\">Selector('#main-f=\r\norm').find('input').nth(1)</code><br>\r\n            <strong>Pros and Cons:</strong> Similar to the above selector, but =\r\n            relies on the parent ID.<br>\r\n            <strong>Summary:</strong> Appears to be more specific than the abov=\r\n            e selector, but it is not.\r\n        </li>\r\n    </ul>\r\n\r\n    <p><strong>Class-based</strong></p>\r\n    <ul>\r\n        <li><strong>Selector:</strong> <code class=\"legacy\">Selector('.column=\r\n.col-1').find('input').nth(1)</code><br>\r\n            <strong>Pros and Cons:</strong> The element has no class, so this s=\r\n            elector uses the parent class. Classes can change because they are usually =\r\n            assigned for styling purposes.<br>\r\n            <strong>Summary:</strong> Sensitive to CSS modifications; difficult=\r\n            to maintain.\r\n        </li>\r\n    </ul>\r\n\r\n    <p><strong>Text-based (text matches the attribute value in this case)</stro=>\r\n    </p>\r\n    <ul>\r\n        <li><strong>Selector:</strong> <code class=\"legacy\">Selector('input[v=\r\nalue=\"Populate\"]')</code><br>\r\n            <strong>Pros and Cons:</strong> Mirrors how users perceive the page=\r\n            , so it may be stable. Detects actual issues caused by accidental text chan=\r\n            ges.<br>\r\n            <strong>Summary:</strong> Satisfactory, but fails even when text ch=\r\n            anges are intended.\r\n        </li>\r\n    </ul>\r\n\r\n    <p><strong>Custom attribute-based</strong></p>\r\n    <ul>\r\n        <li><strong>Selector:</strong> <code class=\"legacy\">Selector('[data-t=\r\nestid=\"populate-button\"]')</code><br>\r\n            <strong>Pros and Cons:</strong> The most stable selector, since it =\r\n            is not affected by changes.<br>\r\n            <strong>Summary:</strong> The preferred selector type for most scen=\r\n            arios.\r\n        </li>\r\n    </ul>\r\n\r\n\r\n\r\n    <p>In summary, custom attributes have the following benefits:</p>\r\n    <ul>\r\n        <li><strong>Tests do not break based on markup or code changes.</strong> A =\r\n            test will not fail when you refactor HTML or implement new behavior in Java=\r\n            Script.</li>\r\n        <li><strong>Tests do not depend on page styles.</strong> You can switch the=\r\n            mes as many times as you wish - tests will not fail because of a certain st=\r\n            yle or theme.</li>\r\n        <li><strong>Text content modifications do not affect tests</strong>. Tests =\r\n            are not affected by changes to content, including localization changes. Not=\r\n            e, however, that if an element=E2=80=99s text is essential to a test scenar=\r\n            io, you should verify the text content or use a text-based selector: <em>Se=\r\n                lector(=E2=80=98div=E2=80=99).withText(=E2=80=98Add to Cart=E2=80=99).</em>=\r\n        </li>\r\n        <li><strong>Use a custom attribute to indicate that an element is used in t=\r\n                ests</strong>.</li>\r\n    </ul>\r\n\r\n    <h2>A New Way to Customize Selectors</h2>\r\n    <p>When you record a test, TestCafe automatically generates a selector. Tes=\r\n        tCafe also lets you choose an alternative selector from a drop-down list or=\r\n        create one manually. The latest TestCafe update (v1.3.0) ships with an adj=\r\n        ustable selector generation algorithm. You can now configure the selector g=\r\n        enerator on the fly, based on the tested page:</p>\r\n\r\n    <ul>\r\n\r\n        <li><strong>Prioritize selector types.</strong> Use this option if you =\r\n            often need to choose a different selector from the suggestion list. The def=\r\n            ault selector is generated based on your preferences.\r\n            <p> <img src=\"https://community.devexpress.com/blogs/testcafe/Studio1=.3.0/1@2x.png\" alt=\"Prioritize\n                    selector types\" style=\"width:780px;\"> </= p> =20\r\n        </li>=20\r\n        =20\r\n        <li><strong>Disable unwanted selector types</strong>. For instance, you=\r\n            r website can generate id, class, or other element attributes automatically=\r\n            , so that they change each time the page reloads. However, you cannot use t=\r\n            hese values in selectors because the test cannot be replayed. In this insta=\r\n            nce, you may want to exclude these attributes from selector generation rule=\r\n            s. You can now simply disable the corresponding selector type - and switch =\r\n            back to it at any time - without restarting the recorder.\r\n            <p>\r\n            <div class=\"SmallImage\"><img class=\"small\" src=\"https://commu=nity.devexpress.com/blogs/testcafe/Studio1.3.0/2@2x.png\" alt=\"Prioritize=selector types\" style=\"width:520px;\"></div>\r\n            </p>\r\n        </li>\r\n\r\n        <li><strong>Add selector types based on custom attributes.</strong> The=\r\n            se selector types are preferred because if you configure them, you won=E2=\r\n            =80=99t have to edit selectors due to changes. The only requirement is that=\r\n            you maintain unique attribute values during development.\r\n            <p> <img src=\"https://community.devexpress.com/blogs/testcafe/Studio1=.3.0/3@2x.png\" alt=\"Prioritize\n                    selector types\" style=\"width:780px;\"> </= p>\r\n        </li>\r\n    </ul>\r\n\r\n\r\n    <h2>Recap</h2>\r\n\r\n    <p>TestCafe Studio generates selectors for every page element that takes pa=\r\n        rt in a test. Good selectors must comply with strict guidelines to be stabl=\r\n        e and reliable. TestCafe algorithms use best practices to generate selector=\r\n        s that meet these criteria. You can also optimize selectors based on your u=\r\n        nderstanding of how the website works. Our latest update (v1.3.0) allows yo=\r\n        u to instruct TestCafe Studio to use custom attributes in selectors or igno=\r\n        re dynamic IDs. The result is more stable selectors that are easy to read a=\r\n        nd maintain.</p>\r\n    <p>You can read more about the new adjustable selector generation algorithm=\r\n        in our <a href=\"https://docs.devexpress.com/TestCafeStudio/400407/test-a=ctions/element-selectors#element-selector-types\" target=\"_blank\">documentation<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.\r\n        As alwa=\r\n        ys, we are happy to answer your questions in the comments. Happy testing!</= p>\r\n        <!-- fixed -->\r\n        =20\r\n\r\n    <h2>Free DevExpress Products =E2=80=93 Get Your Copy To=\r\n        day</h2>\r\n    <div>The following free DevExpress product offers remai=\r\n        n available. Should you have any questions about the free offers below, ple=\r\n        ase submit a ticket via the <a href=\"https://supportcenter.devexpress.com=/\" target=\"_blank\" target=\"_blank\">DevExpress\r\n            Support Center<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> at your convenience. We=\r\n        =E2=80=99ll be happy to follow-up.</div>\r\n    <div class=\"Note\">\r\n        <ul>\r\n            <li><a href=\"https://www.devexpress.com/secur=ity-api-free?utm_source=3DDevExpress&amp;utm_medium=3DBlog&amp;utm_campaign==3DXAF&amp;utm_content=3Dfooter\" target=\"_blank\" target=\"_blank\">.NET App Security &amp; =\r\n                    Web API Service<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></li>\r\n            <li><a href=\"https://www.devexpress.com/mobil=e-xamarin-maui-free?utm_source=3DDevExpress&amp;utm_medium=3DBlog&amp;utm_c=ampaign=3DXamarinFreeOffer&amp;utm_content=3Dfooter\" target=\"_blank\" target=\"_blank\">.NET=\r\n                    MAUI &amp; Xamarin Controls<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></li>\r\n            <li><a href=\"https://www.devexpress.com/produ=cts/coderush?utm_source=3DDevExpress&amp;utm_medium=3DBlog&amp;utm_campaign==3DCodeRush&amp;utm_content=3Dfooter\" target=\"_blank\" target=\"_blank\">CodeRush for Visual=\r\n                    Studio<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></li>\r\n            <li><a href=\"https://www.devexpress.com/produ=cts/net/orm?utm_source=3DDevExpress&amp;utm_medium=3DBlog&amp;utm_campaign==3DXPO&amp;utm_content=3Dfooter\" target=\"_blank\" target=\"_blank\">.NET ORM Library (XPO)</= a>\r\n            </li>\r\n            <li><a href=\"https://www.devexpress.com/winui=-free?utm_source=3DDevExpress&amp;utm_medium=3DBlog&amp;utm_campaign=3DWinU=IFreeOffer&amp;utm_content=3Dfooter\" target=\"_blank\" target=\"_blank\">WinUI Controls<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></= li>\r\n        </ul>\r\n    </div>\r\n    =20\r\n    =20\r\n    =20\r\n</div>\r\n<div class=\"BlogPostFooter\">\r\n    <div class=\"PostAuthorInfo\">\r\n        <div class=\"User\">\r\n            <img src=\"https://community.devexpress.com/utility/an=onymous.png\" alt=\"Andrey N. (DevExpress)\" style=\"border-width:0px;max-height:80px;max-width:80px;\">\r\n            <span class=\"DisplayName\">Andrey N. (DevExpress)</spa=>\r\n                =20\r\n        </div>\r\n        =20\r\n        =20\r\n    </div>\r\n    <div class=\"Tags\">\r\n        <div id=\"ctl00_ctl00_ctl00_ctl00_Content_=Content_Content_Content_ctl11_ctl00_Container\" style=\"display:\n            none;\">\r\n            <di= v=\"\" class=\"CommonInlineTagEditor\"><textarea id=\"ctl00_ctl00_ctl00_ctl00_C=ontent_Content_Content_Content_ctl11_ctl00_Tags\" style=\"width:\n                    100%; height: 100%;\" rows=\"2\" cols=\"30\"></textarea>\r\n                <div style=\"white-space: now=rap; padding-top: 4px;\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" border=\"=&quot;0&quot;\" width=\"100%\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td align=\"left\"><a href=\"https://comm=unity.devexpress.com/blogs/testcafe/archive/2020/06/10/testcafe-studio-v1-3=-0-a-new-way-to-work-with-selectors.aspx#\" class=\"CommonTextButton\" target=\"_blank\">Selec=\r\n                                        t Tags...<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></td>\r\n                                <td align=\"right\"><a href=\"https://community.devexpre=ss.com/blogs/testcafe/archive/2020/06/10/testcafe-studio-v1-3-0-a-new-way-t=o-work-with-selectors.aspx#\" class=\"CommonTextButton\" target=\"_blank\">Save<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a><a href=\"=https://community.devexpress.com/blogs/testcafe/archive/2020/06/10/testcafe=-studio-v1-3-0-a-new-way-to-work-with-selectors.aspx#\" class=\"CommonTextB=utton\" target=\"_blank\">Cancel<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n    </div><span id=\"ct=l00_ctl00_ctl00_ctl00_Content_Content_Content_Content_ctl11_ctl01\">Tags<div=><a href=\"https://community.devexpress.com/tags/TestCafe/default.aspx\" re=\"l=&quot;tag&quot;\" target=\"_blank\">TestCafe<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>, <a href=\"https://community.devexpress.com/tags/te=sting+tools/default.aspx\" rel=\"tag\" target=\"_blank\">testing\r\n                tools<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>, <a href=\"https:/=/community.devexpress.com/tags/TestCafe+Studio/default.aspx\" rel=\"tag\" target=\"_blank\">Te=\r\n                stCafe Studio<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>, <a href=\"https://community.devexpress.com/tags/web+tes=ting/default.aspx\" rel=\"tag\" target=\"_blank\">web testing<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>, <a href=\"https://communit=y.devexpress.com/tags/Web/default.aspx\" rel=\"tag\" target=\"_blank\">Web<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>\r\n</div></span>\r\n","headers":[],"title":"TestCafe Studio v1.3.0 - A New Way to Work with Selectors","schema":null,"author":null,"preview":null,"description":null,"published":"2023-4-4"},"topicUid":"403421","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Docs","id":"Docs","url":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog","items":[]}],"activeItems":[{"name":"Resources","id":"Resources"},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"TestCafe Studio v1.3.0 - A New Way to Work with Selectors","id":"403421","url":"/403421/resources/blog/2023-4-4-testcafe-studio-v1-3-0-a-new-way-to-work-with-selectors"}]},"sidebarNav":{"root":{"name":"Resources","id":"Resources"},"items":[{"name":"Resources","id":"Resources","items":[{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog","items":[{"name":"The Fastest Way to Your Next Test – TestCafe + TestCafe Studio - Q&As","id":"402902","url":"/402902/resources/blog/2020-09-24-the-fastest-way-to-your-next-test-qa"},{"name":"Upcoming Webinar: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402903","url":"/402903/resources/blog/2020-11-17-upcoming-webinar-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Client Functions and Script Injection for Page Interaction","id":"402908","url":"/402908/resources/blog/2020-11-18-client-functions-and-script-injection-for-page-interaction"},{"name":"Webinar Recording: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402906","url":"/402906/resources/blog/2020-12-11-webinar-recording-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Randomize Your End-to-End Tests: How to Generate Input Data for TestCafe","id":"402905","url":"/402905/resources/blog/2020-12-28-randomize-your-end-to-end-tests-how-to-generate-input-data-for-testcafe"},{"name":"How to Scroll Web Pages Using TestCafe","id":"402893","url":"/402893/resources/blog/2020-4-20-how-to-scroll-web-pages-using-testcafe"},{"name":"How to Debug Tests in TestCafe: Quick Guide","id":"402894","url":"/402894/resources/blog/2020-5-25-how-to-debug-tests-in-testcafe-quick-guide"},{"name":"How to Speed up Debugging in TestCafe: Tips and Tricks","id":"402895","url":"/402895/resources/blog/2020-6-30-how-to-speed-up-debugging-in-testcafe-tips-and-tricks"},{"name":"Upcoming Webinar: 10 Ways to Simplify Your UI Testing","id":"402896","url":"/402896/resources/blog/2020-7-14-10-ways-to-simplify-your-ui-testing"},{"name":"Introducing the TestCafe Jenkins Plugin","id":"402897","url":"/402897/resources/blog/2020-7-29-introducing-the-testcafe-jenkins-plugin"},{"name":"TestCafe Webinar - Your Questions Answered","id":"402898","url":"/402898/resources/blog/2020-8-19-testcafe-webinar-your-questions-answered"},{"name":"Upcoming Webinar: The Fastest Way to Your Next Test – TestCafe + TestCafe Studio","id":"402899","url":"/402899/resources/blog/2020-8-21-the-fastest-way-to-your-next-test"},{"name":"Introducing Multi-window Tests (Beta)","id":"402900","url":"/402900/resources/blog/2020-8-26-introducing-multi-window-tests-beta"},{"name":"How TestCafe Can Help You to Deliver Faster","id":"402901","url":"/402901/resources/blog/2020-9-3-how-testcafe-can-help-you-to-deliver-faster"},{"name":"Upcoming Roundtable: Modern Web Testing with TestCafe","id":"402904","url":"/402904/resources/blog/2021-2-9-modern-web-testing-with-testcafe"},{"name":"Nächste Woche: Deutscher Live-Stream zu TestCafe mit Gregor Biswanger","id":"403292","url":"/403292/resources/blog/2021-7-14-naechste-woche-deutscher-live-stream"},{"name":"Case study: How Medinas started deploying every day by using TestCafe","id":"403422","url":"/403422/resources/blog/2021-9-22-how-medinas-started-deploying-every-day"},{"name":"TestCafe Dashboard (Alpha): Be the First to Explore its Capabilities","id":"403442","url":"/403442/resources/blog/2021-10-7-dashboard-alpha-invitation-announce"},{"name":"Case study: How Neos CMS Increased Reliability and Confidence with E2E testing and TestCafe","id":"403571","url":"/403571/resources/blog/2021-11-17-how-neos-cms-increased-reliability-and-confidence-with-e2e-testing-and-testcafe"},{"name":"The 2022 TestCafe Survey: Let us know what you think!","id":"404008","url":"/404008/resources/blog/2022-7-12-2022-testcafe-survey-let-us-know-what-you-think"},{"name":"From TestCafe 1.0 to TestCafe 2.0: 11 Most Notable Enhancements","id":"404059","url":"/404059/resources/blog/2022-8-31-from-testcafe-10-to-testcafe-20-11-most-notable-enhancements"},{"name":"Case study: SurveyJS — Test-Driven Development with TestCafe","id":"404146","url":"/404146/resources/blog/2022-11-01-surveyjs-case-study"},{"name":"TestCafe Studio v1.3.0 - A New Way to Work with Selectors","id":"403421","url":"/403421/resources/blog/2023-4-4-testcafe-studio-v1-3-0-a-new-way-to-work-with-selectors"}]},{"name":"Community Blogs","id":"Resources/Community Blogs","url":"/resources/community-blogs","href":"/resources/community-blogs"},{"name":"Courses","id":"Resources/Courses","url":"/resources/courses","href":"/resources/courses"},{"name":"Books","id":"Resources/Books","url":"/resources/books","href":"/resources/books"}]}],"activeItems":[{"name":"Resources","id":"Resources"},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"TestCafe Studio v1.3.0 - A New Way to Work with Selectors","id":"403421","url":"/403421/resources/blog/2023-4-4-testcafe-studio-v1-3-0-a-new-way-to-work-with-selectors"}],"showLeafs":false},"breadcrumbsNav":[{"name":"Resources","id":"Resources"},{"name":"Blog","id":"Resources/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"TestCafe Studio v1.3.0 - A New Way to Work with Selectors","id":"403421","url":"/403421/resources/blog/2023-4-4-testcafe-studio-v1-3-0-a-new-way-to-work-with-selectors"}],"publishDates":{"teamBlog":[1680566400000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes":[1712188800000,1678147200000,1675036800000,1672272000000,1668038400000,1661904000000,1659916800000,1658102400000,1653523200000,1642464000000,1640131200000,1633132800000,1631059200000,1625702400000,1617753600000,1616371200000,1614729600000,1613347200000,1607990400000,1596672000000,1579219200000,1574294400000,1571184000000,1568246400000,1565136000000,1562284800000,1562025600000,1551312000000,1549497600000,1549497600000,1541548800000,1540425600000,1535932800000,1533168000000,1526342400000,1519862400000,1507593600000,1506643200000,1501632000000,1497312000000,1493164800000,1490659200000,1487203200000,1484784000000,1481155200000,1478563200000,1476662400000]}},"__N_SSG":true}