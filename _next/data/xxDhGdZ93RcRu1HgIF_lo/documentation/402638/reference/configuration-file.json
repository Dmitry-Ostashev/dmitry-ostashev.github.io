{"pageProps":{"content":{"html":"        <h1>Configuration File</h1>\r\n\r\n<p>When you launch TestCafe from the command line, you can specify <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface\">launch options</a>, like so: <code>testcafe all tests/sample-fixture.js -q</code>.</p>\r\n<p>As the list of options grows in size, it becomes harder to maintain. This is why launch settings should be stored in a dedicated configuration file.</p>\r\n<h2 id=\"configuration-conflicts__$\"><a class=\"anchor-fix\" href=\"#configuration-conflicts\" id=\"configuration-conflicts\"></a>Configuration conflicts<a class=\"anchor-hash\" href=\"#configuration-conflicts\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p><a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface\">Command line options</a> and <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">TestCafe Runner options</a> have precedence over configuration file settings. When TestCafe overrides a configuration file setting, it outputs a description of the conflict to the console.</p>\r\n<h2 id=\"set-up__$\"><a class=\"anchor-fix\" href=\"#set-up\" id=\"set-up\"></a>Set-up<a class=\"anchor-hash\" href=\"#set-up\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<h3 id=\"location__$\"><a class=\"anchor-fix\" href=\"#location\" id=\"location\"></a>Location<a class=\"anchor-hash\" href=\"#location\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>On startup, TestCafe looks for a configuration file (<code>.testcaferc.js</code> or <code>.testcaferc.json</code>) in the current working directory. To store the configuration file elsewhere, set one of the following options:</p>\r\n<ul>\r\n<li>The <code>--config-file</code> <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--config-file-path\">command line option</a></li>\r\n<li>The <code>configFile</code> <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">option</a> of the <a class=\"xref\" href=\"/documentation/402830/guides/basic-guides/run-tests#test-runner-api\">TestCafe Runner API</a></li>\r\n</ul>\r\n<h3 id=\"name__$\"><a class=\"anchor-fix\" href=\"#name\" id=\"name\"></a>Name<a class=\"anchor-hash\" href=\"#name\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>The default base name for the configuration file is <code>.testcaferc</code>. To use a configuration file with a custom name, set one of the following options:</p>\r\n<ul>\r\n<li>The <code>--config-file</code> <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--config-file-path\">command line option</a></li>\r\n<li>The <code>configFile</code> <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">option</a> of the <a class=\"xref\" href=\"/documentation/402830/guides/basic-guides/run-tests#test-runner-api\">TestCafe Runner API</a></li>\r\n</ul>\r\n<p>TestCafe supports two configuration file formats: <code>.js</code> and <code>.json</code>. Refer to the <a href=\"#formats\">Formats</a> section for a comparison of these configuration file formats.</p>\r\n<h3 id=\"configuration-file-priority__$\"><a class=\"anchor-fix\" href=\"#configuration-file-priority\" id=\"configuration-file-priority\"></a>Configuration file priority<a class=\"anchor-hash\" href=\"#configuration-file-priority\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>TestCafe can only use one configuration file at a time. </p>\r\n<ul>\r\n<li>If a user does not explicitly set the <a href=\"#name\">name</a> or <a href=\"#location\">location</a> of the configuration file, TestCafe searches the <em>current working directory</em> for a file named <code>.testcaferc.js</code>. </li>\r\n<li>If <code>.testcaferc.js</code> does not exist, TestCafe looks for a file named <code>.testcaferc.json</code>. </li>\r\n<li>If neither file exists, TestCafe does not load any configuration files.</li>\r\n</ul>\r\n<h3 id=\"formats__$\"><a class=\"anchor-fix\" href=\"#formats\" id=\"formats\"></a>Formats<a class=\"anchor-hash\" href=\"#formats\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<h4 id=\"json__$\"><a class=\"anchor-fix\" href=\"#json\" id=\"json\"></a>JSON<a class=\"anchor-hash\" href=\"#json\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>JSON configuration files store settings in key-value pairs. These files adhere to the <a href=\"https://json5.org/\" target=\"_blank\">JSON5<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> standard. They support JavaScript identifiers as object keys, single-quoted strings, comments, and other modern features.</p>\r\n<p><strong>.testcaferc.json:</strong></p>\r\n<pre><code class=\"lang-json\">{\r\n    skipJsErrors: true,\r\n    hostname: &quot;localhost&quot;,\r\n    // other settings\r\n}\r\n</code></pre><p>You can find a sample JSON configuration file <a href=\"https://github.com/DevExpress/testcafe/blob/master/examples/.testcaferc.json\" target=\"_blank\">in the GitHub repository<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<h4 id=\"javascript__$\"><a class=\"anchor-fix\" href=\"#javascript\" id=\"javascript\"></a>JavaScript<a class=\"anchor-hash\" href=\"#javascript\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>JavaScript configuration files store settings in key-value pairs within a <strong>module.exports</strong> statement. TestCafe <em>cannot</em> access the settings that the user did not <em>export</em>. </p>\r\n<p>JavaScript configuration files can contain definitions for <a href=\"#customactions\">custom actions</a>, <a href=\"#test-hooks\">global test hooks</a> and <a href=\"#request-hooks\">global request hooks</a>.</p>\r\n<p>Configuration properties in JavaScript files can reference JavaScript methods, functions, and variables, which makes it easy to create dynamic configuration files.</p>\r\n<p>Use <a href=\"https://nodejs.org/api/modules.html#requireid\" target=\"_blank\">CommonJs<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> <code>require</code> syntax to access Node.js modules inside your configuration file.</p>\r\n<pre><code class=\"lang-js\">let os = require(&quot;os&quot;); // import the entire module\r\nlet myModule = require (&quot;/my-module.js&quot;) // import a module by path\r\nlet { property } = require (&quot;module&quot;) // import a particular property from the module\r\n</code></pre><p><strong>.testcaferc.js:</strong></p>\r\n<pre><code class=\"lang-js\">let os = require(&quot;os&quot;);\r\n\r\nmodule.exports = {\r\n    skipJsErrors: true,\r\n    hostname: os.hostname(),\r\n    // other settings\r\n}\r\n</code></pre><h2 id=\"settings__$\"><a class=\"anchor-fix\" href=\"#settings\" id=\"settings\"></a>Settings<a class=\"anchor-hash\" href=\"#settings\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Configuration files can include the following settings:</p>\r\n<ul>\r\n<li><a href=\"#browsers\">browsers</a></li>\r\n<li><a href=\"#src\">src</a></li>\r\n<li><a href=\"#reporter\">reporter</a></li>\r\n<li><a href=\"#baseurl\">baseUrl</a></li>\r\n<li><a href=\"#screenshots\">screenshots</a><ul>\r\n<li><a href=\"#screenshotspath\">path</a></li>\r\n<li><a href=\"#screenshotstakeonfails\">takeOnFails</a></li>\r\n<li><a href=\"#screenshotspathpattern\">pathPattern</a></li>\r\n<li><a href=\"#screenshotsfullpage\">fullPage</a></li>\r\n<li><a href=\"#screenshotsthumbnails\">thumbnails</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#disablescreenshots\">disableScreenshots</a></li>\r\n<li><a href=\"#screenshotpath\">screenshotPath</a> <em>(deprecated)</em></li>\r\n<li><a href=\"#takescreenshotsonfails\">takeScreenshotsOnFails</a> <em>(deprecated)</em></li>\r\n<li><a href=\"#screenshotpathpattern\">screenshotPathPattern</a> <em>(deprecated)</em></li>\r\n<li><a href=\"#videopath\">videoPath</a></li>\r\n<li><a href=\"#videooptions\">videoOptions</a></li>\r\n<li><a href=\"#videoencodingoptions\">videoEncodingOptions</a></li>\r\n<li><a href=\"#quarantinemode\">quarantineMode</a></li>\r\n<li><a href=\"#debugmode\">debugMode</a></li>\r\n<li><a href=\"#debugonfail\">debugOnFail</a></li>\r\n<li><a href=\"#experimentalproxyless\">experimentalProxyless</a></li>\r\n<li><a href=\"#experimentaldebug\">experimentalDebug</a></li>\r\n<li><a href=\"#skipjserrors\">skipJsErrors</a></li>\r\n<li><a href=\"#skipuncaughterrors\">skipUncaughtErrors</a></li>\r\n<li><a href=\"#filter\">filter</a><ul>\r\n<li><a href=\"#filtertest\">test</a></li>\r\n<li><a href=\"#filtertestgrep\">testGrep</a></li>\r\n<li><a href=\"#filterfixture\">fixture</a></li>\r\n<li><a href=\"#filterfixturegrep\">fixtureGrep</a></li>\r\n<li><a href=\"#filtertestmeta\">testMeta</a></li>\r\n<li><a href=\"#filterfixturemeta\">fixtureMeta</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#appcommand\">appCommand</a></li>\r\n<li><a href=\"#appinitdelay\">appInitDelay</a></li>\r\n<li><a href=\"#concurrency\">concurrency</a></li>\r\n<li><a href=\"#selectortimeout\">selectorTimeout</a></li>\r\n<li><a href=\"#assertiontimeout\">assertionTimeout</a></li>\r\n<li><a href=\"#pageloadtimeout\">pageLoadTimeout</a></li>\r\n<li><a href=\"#ajaxrequesttimeout\">ajaxRequestTimeout</a></li>\r\n<li><a href=\"#pagerequesttimeout\">pageRequestTimeout</a></li>\r\n<li><a href=\"#browserinittimeout\">browserInitTimeout</a></li>\r\n<li><a href=\"#testexecutiontimeout\">testExecutionTimeout</a></li>\r\n<li><a href=\"#runexecutiontimeout\">runExecutionTimeout</a></li>\r\n<li><a href=\"#speed\">speed</a></li>\r\n<li><a href=\"#clientscripts\">clientScripts</a></li>\r\n<li><a href=\"#port1-port2\">port1, port2</a></li>\r\n<li><a href=\"#hostname\">hostname</a></li>\r\n<li><a href=\"#proxy\">proxy</a></li>\r\n<li><a href=\"#proxybypass\">proxyBypass</a></li>\r\n<li><a href=\"#ssl\">ssl</a></li>\r\n<li><a href=\"#developmentmode\">developmentMode</a></li>\r\n<li><a href=\"#qrcode\">qrCode</a></li>\r\n<li><a href=\"#stoponfirstfail\">stopOnFirstFail</a></li>\r\n<li><a href=\"#tsconfigpath\">tsConfigPath</a></li>\r\n<li><a href=\"#compileroptions\">compilerOptions</a></li>\r\n<li><a href=\"#cache\">cache</a></li>\r\n<li><a href=\"#disablepagecaching\">disablePageCaching</a></li>\r\n<li><a href=\"#disablemultiplewindows\">disableMultipleWindows</a></li>\r\n<li><a href=\"#color\">color</a></li>\r\n<li><a href=\"#nocolor\">noColor</a></li>\r\n<li><a href=\"#uservariables\">userVariables</a></li>\r\n<li><a href=\"#hooks\">hooks</a></li>\r\n</ul>\r\n<h3 id=\"browsers__$\"><a class=\"anchor-fix\" href=\"#browsers\" id=\"browsers\"></a>browsers<a class=\"anchor-hash\" href=\"#browsers\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies one or several browsers in which a test should run.</p>\r\n<p>You can use <a class=\"xref\" href=\"/documentation/402828/guides/intermediate-guides/browsers#local-browsers\">browser aliases</a> to specify locally installed browsers.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;browsers&quot;: &quot;chrome&quot;\r\n}\r\n</code></pre><pre><code class=\"lang-json\">{\r\n    &quot;browsers&quot;: [&quot;ie&quot;, &quot;firefox&quot;]\r\n}\r\n</code></pre><p>Use the <code>all</code> alias to run tests in all the installed browsers.</p>\r\n<p>Use the <code>path:</code> prefix to specify a path to the browser’s executable file. Enclose the path in backticks if it contains spaces.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;browsers&quot;: &quot;path:`C:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe`&quot;\r\n}\r\n</code></pre><p>Alternatively, you can pass an object whose <code>path</code> property specifies the path to the browser’s executable file. In this case, you can also use an optional <code>cmd</code> property to specify command line parameters passed to the browser.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;browsers&quot;: {\r\n        &quot;path&quot;: &quot;/home/user/portable/firefox.app&quot;,\r\n        &quot;cmd&quot;: &quot;--no-remote&quot;\r\n    }\r\n}\r\n</code></pre><p>To run tests in <a class=\"xref\" href=\"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation#cloud-testing-services\">cloud browsers</a> or <a class=\"xref\" href=\"/documentation/402828/guides/intermediate-guides/browsers#custom-browsers\">other browsers</a> accessed through a <a class=\"xref\" href=\"/documentation/402812/guides/extend-testcafe/browser-provider-plugin\">browser provider plugin</a>,\r\nspecify the browser’s alias that consists of the <code>{browser-provider-name}</code> prefix and the name of the browser (the latter can be omitted); for example, <code>saucelabs:Chrome@52.0:Windows 8.1</code>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;browsers&quot;: &quot;saucelabs:Chrome@52.0:Windows 8.1&quot;\r\n}\r\n</code></pre><p>To run tests in a <a class=\"xref\" href=\"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation#remote-and-mobile-devices\">browser on a remote device</a>, specify <code>remote</code> as a browser alias.</p>\r\n<p>If you want to connect multiple browsers, specify <code>remote:</code> and the number of browsers. For example, if you need to use four remote browsers, specify <code>remote:4</code>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;browsers&quot;: &quot;remote:4&quot;\r\n}\r\n</code></pre><p>You can add postfixes to browser aliases to run tests in <a class=\"xref\" href=\"/documentation/402828/guides/intermediate-guides/browsers#test-in-headless-mode\">headless mode</a>, use <a class=\"xref\" href=\"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation#simulate-devices-with-chromium\">Chrome device emulation</a> or <a class=\"xref\" href=\"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation#user-profile\">user profiles</a>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;browsers&quot;: [&quot;firefox:headless&quot;, &quot;chrome:emulation:device=iphone X&quot;]\r\n}\r\n</code></pre><div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>You cannot add postfixes when you use the <code>path:</code> prefix or pass a <code>{ path, cmd }</code> object.</p>\r\n</div>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#specify-browsers\">Browser List</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402661/reference/testcafe-api/runner/browsers\">runner.browsers</a>, <a class=\"xref\" href=\"/documentation/402643/reference/testcafe-api/browserconnection\">BrowserConnection</a></p>\r\n<h3 id=\"src__$\"><a class=\"anchor-fix\" href=\"#src\" id=\"src\"></a>src<a class=\"anchor-hash\" href=\"#src\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies files or directories from which to run tests.</p>\r\n<p>TestCafe can run tests from the following file types:</p>\r\n<ul>\r\n<li>JavaScript, TypeScript, and CoffeeScript files that use TestCafe API.</li>\r\n<li><a href=\"https://www.devexpress.com/products/testcafestudio/\" target=\"_blank\">TestCafe Studio<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> tests (<code>.testcafe</code> files).</li>\r\n<li>Legacy TestCafe v2015.1 tests.</li>\r\n</ul>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;src&quot;: &quot;/home/user/tests/fixture.js&quot;\r\n}\r\n</code></pre><pre><code class=\"lang-json\">{\r\n    &quot;src&quot;: [&quot;/home/user/auth-tests/fixture.testcafe&quot;, &quot;/home/user/mobile-tests/&quot;]\r\n}\r\n</code></pre><p>You can use <a href=\"https://github.com/isaacs/node-glob#glob-primer\" target=\"_blank\">glob patterns<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> to specify a set of files.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;src&quot;: [&quot;/home/user/tests/**/*.js&quot;, &quot;!/home/user/tests/foo.js&quot;]\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface\">Specify test files</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402653/reference/testcafe-api/runner/src\">runner.src</a></p>\r\n<h3 id=\"baseurl__$\"><a class=\"anchor-fix\" href=\"#baseurl\" id=\"baseurl\"></a>baseURL<a class=\"anchor-hash\" href=\"#baseurl\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>The <code>baseURL</code> option defines the starting URL for all tests and fixtures in your test suite.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;baseUrl&quot;: &quot;https://devexpress.github.io/testcafe&quot;\r\n}\r\n</code></pre><p>You can override this option with the <a class=\"xref\" href=\"/documentation/402778/reference/test-api/fixture/page\">fixture.page</a> and <a class=\"xref\" href=\"/documentation/402732/reference/test-api/test/page\">test.page</a> methods.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--base-url\">--base-url</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run#baseurl\">run.baseUrl</a></p>\r\n<h3 id=\"reporter__$\"><a class=\"anchor-fix\" href=\"#reporter\" id=\"reporter\"></a>reporter<a class=\"anchor-hash\" href=\"#reporter\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the name of a <a class=\"xref\" href=\"/documentation/402825/guides/intermediate-guides/reporters\">built-in</a> or <a class=\"xref\" href=\"/documentation/402810/guides/extend-testcafe/reporter-plugin\">custom reporter</a> that generates test reports.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;reporter&quot;: &quot;list&quot;\r\n}\r\n</code></pre><p>This configuration outputs the test report to <code>stdout</code>. To save a report to a file, pass an object whose <code>name</code> property specifies the reporter name and <code>output</code> property specifies the path to the file.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;reporter&quot;: {\r\n        &quot;name&quot;: &quot;xunit&quot;,\r\n        &quot;output&quot;: &quot;reports/report.xml&quot;\r\n    }\r\n}\r\n</code></pre><p>You can use multiple reporters, but note that only one reporter can write to <code>stdout</code>. All other reporters must output to files.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;reporter&quot;: [\r\n        {\r\n            &quot;name&quot;: &quot;spec&quot;\r\n        },\r\n        {\r\n            &quot;name&quot;: &quot;json&quot;,\r\n            &quot;output&quot;: &quot;reports/report.json&quot;\r\n        }\r\n    ]\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-r-nameoutput---reporter-nameoutput\">-r, --reporter</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402656/reference/testcafe-api/runner/reporter\">runner.reporter</a></p>\r\n<h3 id=\"screenshots__$\"><a class=\"anchor-fix\" href=\"#screenshots\" id=\"screenshots\"></a>screenshots<a class=\"anchor-hash\" href=\"#screenshots\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Allows you to specify the screenshot options.</p>\r\n<h4 id=\"screenshotspath__$\"><a class=\"anchor-fix\" href=\"#screenshotspath\" id=\"screenshotspath\"></a>screenshots.path<a class=\"anchor-hash\" href=\"#screenshotspath\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specifies the base directory in which to save screenshots.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;path&quot;: &quot;/home/user/tests/screenshots/&quot;\r\n    }\r\n}\r\n</code></pre><p>See <a class=\"xref\" href=\"/documentation/402840/guides/intermediate-guides/screenshots-and-videos#screenshots\">Screenshots</a> for details.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#path\">--screenshots path</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402654/reference/testcafe-api/runner/screenshots\">runner.screenshots</a></p>\r\n<h4 id=\"screenshotstakeonfails__$\"><a class=\"anchor-fix\" href=\"#screenshotstakeonfails\" id=\"screenshotstakeonfails\"></a>screenshots.takeOnFails<a class=\"anchor-hash\" href=\"#screenshotstakeonfails\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specifies whether to take a screenshot when a test fails.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;takeOnFails&quot;: true\r\n    }\r\n}\r\n</code></pre><p>TestCafe saves screenshots to the directory specified in the <a href=\"#screenshotspath\">screenshots.path</a> property.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#takeonfails\">--screenshots takeOnFails</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402654/reference/testcafe-api/runner/screenshots\">runner.screenshots</a></p>\r\n<h4 id=\"screenshotspathpattern__$\"><a class=\"anchor-fix\" href=\"#screenshotspathpattern\" id=\"screenshotspathpattern\"></a>screenshots.pathPattern<a class=\"anchor-hash\" href=\"#screenshotspathpattern\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specifies a custom pattern to compose screenshot files’ relative path and name.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;pathPattern&quot;: &quot;${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png&quot;\r\n    }\r\n}\r\n</code></pre><p>See <a class=\"xref\" href=\"/documentation/402840/guides/intermediate-guides/screenshots-and-videos#path-pattern-placeholders\">Path Pattern Placeholders</a> for information about available placeholders.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#pathpattern\">--screenshots pathPattern</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402654/reference/testcafe-api/runner/screenshots\">runner.screenshots</a></p>\r\n<h4 id=\"screenshotsfullpage__$\"><a class=\"anchor-fix\" href=\"#screenshotsfullpage\" id=\"screenshotsfullpage\"></a>screenshots.fullPage<a class=\"anchor-hash\" href=\"#screenshotsfullpage\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specifies whether to capture the full page, including invisible elements.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;fullPage&quot;: true\r\n    }\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#fullpage\">--screenshots fullPage</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402654/reference/testcafe-api/runner/screenshots\">runner.screenshots</a></p>\r\n<h4 id=\"screenshotsthumbnails__$\"><a class=\"anchor-fix\" href=\"#screenshotsthumbnails\" id=\"screenshotsthumbnails\"></a>screenshots.thumbnails<a class=\"anchor-hash\" href=\"#screenshotsthumbnails\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specifies whether to make thumbnails for captured screenshots.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;thumbnails&quot;: false\r\n    }\r\n}\r\n</code></pre><p>TestCafe saves thumbnails to the directory specified in the <a href=\"#screenshotspath\">screenshots.path</a> property.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#thumbnails\">--screenshots thumbnails</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402654/reference/testcafe-api/runner/screenshots\">runner.screenshots</a></p>\r\n<h3 id=\"disablescreenshots__$\"><a class=\"anchor-fix\" href=\"#disablescreenshots\" id=\"disablescreenshots\"></a>disableScreenshots<a class=\"anchor-hash\" href=\"#disablescreenshots\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Prevents TestCafe from taking screenshots.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;disableScreenshots&quot;: true\r\n}\r\n</code></pre><p>When this property is specified, TestCafe does not take screenshots when a test fails and ignores the <a class=\"xref\" href=\"/documentation/402675/reference/test-api/testcontroller/takescreenshot\">screenshot action</a>.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--disable-screenshots\">--disable-screenshots</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ disableScreenshots })</a></p>\r\n<h3 id=\"screenshotpath__$\"><a class=\"anchor-fix\" href=\"#screenshotpath\" id=\"screenshotpath\"></a>screenshotPath<a class=\"anchor-hash\" href=\"#screenshotpath\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p><strong>Deprecated.</strong> Enables screenshots and specifies the base directory where they are saved.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshotPath&quot;: &quot;/home/user/tests/screenshots/&quot;\r\n}\r\n</code></pre><p>In <strong>v1.5.0</strong> and later, screenshots are enabled (the default setting) and saved to <em>./screenshots</em>.</p>\r\n<p>To save them to a different location, specify the <a href=\"#screenshotspath\">screenshots.path</a> property:</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;path&quot;: &quot;/home/user/tests/screenshots/&quot;\r\n    }\r\n}\r\n</code></pre><p>Use the <a href=\"#disablescreenshots\">disableScreenshots</a> property to prevent TestCafe from taking screenshots:</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;disableScreenshots&quot;: true\r\n}\r\n</code></pre><h3 id=\"takescreenshotsonfails__$\"><a class=\"anchor-fix\" href=\"#takescreenshotsonfails\" id=\"takescreenshotsonfails\"></a>takeScreenshotsOnFails<a class=\"anchor-hash\" href=\"#takescreenshotsonfails\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p><strong>Deprecated.</strong> Specifies that TestCafe should take a screenshot whenever a test fails.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;takeScreenshotsOnFails&quot;: true\r\n}\r\n</code></pre><p>In <strong>v1.5.0</strong> and later, use the <a href=\"#screenshotstakeonfails\">screenshots.takeOnFails</a> property:</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;takeOnFails&quot;: true\r\n    }\r\n}\r\n</code></pre><h3 id=\"screenshotpathpattern__$\"><a class=\"anchor-fix\" href=\"#screenshotpathpattern\" id=\"screenshotpathpattern\"></a>screenshotPathPattern<a class=\"anchor-hash\" href=\"#screenshotpathpattern\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p><strong>Deprecated.</strong> Specifies a custom pattern to compose screenshot files’ relative path and name.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshotPathPattern&quot;: &quot;${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png&quot;\r\n}\r\n</code></pre><p>In <strong>v1.5.0</strong> and later, use the <a href=\"#screenshotspathpattern\">screenshots.pathPattern</a> property:</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;screenshots&quot;: {\r\n        &quot;pathPattern&quot;: &quot;${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png&quot;\r\n    }\r\n}\r\n</code></pre><h3 id=\"videopath__$\"><a class=\"anchor-fix\" href=\"#videopath\" id=\"videopath\"></a>videoPath<a class=\"anchor-hash\" href=\"#videopath\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Enables TestCafe to record videos of test runs and specifies the base directory to save these videos.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;videoPath&quot;: &quot;reports/screen-captures&quot;\r\n}\r\n</code></pre><p>See <a class=\"xref\" href=\"/documentation/402840/guides/intermediate-guides/screenshots-and-videos#record-videos\">Record Videos</a> for details.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--video-basepath\">--video</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402648/reference/testcafe-api/runner/video\">runner.video</a></p>\r\n<h3 id=\"videooptions__$\"><a class=\"anchor-fix\" href=\"#videooptions\" id=\"videooptions\"></a>videoOptions<a class=\"anchor-hash\" href=\"#videooptions\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies options that define how TestCafe records videos of test runs.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;videoOptions&quot;: {\r\n        &quot;singleFile&quot;: true,\r\n        &quot;failedOnly&quot;: true,\r\n        &quot;pathPattern&quot;: &quot;${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.mp4&quot;\r\n    }\r\n}\r\n</code></pre><p>See <a class=\"xref\" href=\"/documentation/402840/guides/intermediate-guides/screenshots-and-videos#basic-video-options\">Basic Video Options</a> for available options.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>Use the <a href=\"#videopath\">videoPath</a> option to enable video recording.</p>\r\n</div>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--video-options-optionvalueoption2value2\">--video-options</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402648/reference/testcafe-api/runner/video\">runner.video</a></p>\r\n<h3 id=\"videoencodingoptions__$\"><a class=\"anchor-fix\" href=\"#videoencodingoptions\" id=\"videoencodingoptions\"></a>videoEncodingOptions<a class=\"anchor-hash\" href=\"#videoencodingoptions\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies video encoding options.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;videoEncodingOptions&quot;: {\r\n        &quot;r&quot;: 20,\r\n        &quot;aspect&quot;: &quot;4:3&quot;\r\n    }\r\n}\r\n</code></pre><p>You can pass all the options supported by the FFmpeg library. Refer to <a href=\"https://ffmpeg.org/ffmpeg.html#Options\" target=\"_blank\">the FFmpeg documentation<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> for information about all available options.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>Use the <a href=\"#videopath\">videoPath</a> option to enable video recording.</p>\r\n</div>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--video-encoding-options-optionvalueoption2value2\">--video-encoding-options</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402648/reference/testcafe-api/runner/video\">runner.video</a></p>\r\n<h3 id=\"quarantinemode__$\"><a class=\"anchor-fix\" href=\"#quarantinemode\" id=\"quarantinemode\"></a>quarantineMode<a class=\"anchor-hash\" href=\"#quarantinemode\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Enable quarantine mode to <em>eliminate false negatives</em> and <em>detect unstable tests</em>. TestCafe <strong><a class=\"xref\" href=\"/documentation/403841/guides/intermediate-guides/quarantine-mode\">quarantines</a></strong> tests that fail and <strong>repeats</strong> them until they yield conclusive results.</p>\r\n<pre><code class=\"lang-Json\">{\r\n    &quot;quarantineMode&quot;: true\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-q-attemptlimitvalue-successthresholdvalue2---quarantine-mode-attemptlimitvalue-successthresholdvalue2\">-q, --quarantine-mode</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ quarantineMode })</a></p>\r\n<h4 id=\"quarantinemodesuccessthreshold__$\"><a class=\"anchor-fix\" href=\"#quarantinemodesuccessthreshold\" id=\"quarantinemodesuccessthreshold\"></a>quarantineMode.successThreshold<a class=\"anchor-hash\" href=\"#quarantinemodesuccessthreshold\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>The number of successful attempts necessary to confirm a test’s success. The option value should be greater than <code>0</code>. The default value is <code>3</code>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;quarantineMode&quot;: {\r\n        &quot;successThreshold&quot;: 2\r\n    }\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-q-attemptlimitvalue-successthresholdvalue2---quarantine-mode-attemptlimitvalue-successthresholdvalue2\">-q successThreshold=N, --quarantine-mode successThreshold=N</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ quarantineMode: { successThreshold: N } })</a></p>\r\n<h4 id=\"quarantinemodeattemptlimit__$\"><a class=\"anchor-fix\" href=\"#quarantinemodeattemptlimit\" id=\"quarantinemodeattemptlimit\"></a>quarantineMode.attemptLimit<a class=\"anchor-hash\" href=\"#quarantinemodeattemptlimit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>The maximum number of test execution attempts. The option value should exceed the value of the <code>successThreshold</code>. The default value is <code>5</code>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;quarantineMode&quot;: {\r\n        &quot;attemptLimit&quot;: 3\r\n    }\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-q-attemptlimitvalue-successthresholdvalue2---quarantine-mode-attemptlimitvalue-successthresholdvalue2\">-q attemptLimit=N, --quarantine-mode attemptLimit=N</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ quarantineMode: { attemptLimit: N } })</a></p>\r\n<h3 id=\"debugmode__$\"><a class=\"anchor-fix\" href=\"#debugmode\" id=\"debugmode\"></a>debugMode<a class=\"anchor-hash\" href=\"#debugmode\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Runs tests in debug mode.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;debugMode&quot;: true\r\n}\r\n</code></pre><p>See the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-d---debug-mode\">--debug-mode</a> command line parameter for details.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-d---debug-mode\">-d, --debug-mode</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ debugMode })</a></p>\r\n<h3 id=\"debugonfail__$\"><a class=\"anchor-fix\" href=\"#debugonfail\" id=\"debugonfail\"></a>debugOnFail<a class=\"anchor-hash\" href=\"#debugonfail\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies whether to enter debug mode when a test fails.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;debugOnFail&quot;: true\r\n}\r\n</code></pre><p>If this option is enabled, TestCafe pauses the test when it fails. This allows you to view the tested page and determine the cause of the fail.</p>\r\n<p>Click the <strong>Finish</strong> button in the footer to end test execution.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--debug-on-fail\">--debug-on-fail</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ debugOnFail })</a></p>\r\n<h3 id=\"customactions__$\"><a class=\"anchor-fix\" href=\"#customactions\" id=\"customactions\"></a>customActions<a class=\"anchor-hash\" href=\"#customactions\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<blockquote><p>Main article: <a class=\"xref\" href=\"/documentation/404150/guides/advanced-guides/custom-test-actions\">Custom Test Actions</a></p>\r\n</blockquote>\r\n<p>If you use a <a href=\"#javascript\">JavaScript configuration file</a>, you can define custom TestCafe actions. Pass a function with the action’s definition to the <code>customActions</code> configuration file option.</p>\r\n<pre><code class=\"lang-js\">module.exports = {\r\n  customActions: {\r\n   async makeCoffee (...args) {\r\n        await this.click();\r\n    }, \r\n  }\r\n};\r\n</code></pre><h3 id=\"experimentalproxyless__$\"><a class=\"anchor-fix\" href=\"#experimentalproxyless\" id=\"experimentalproxyless\"></a>experimentalProxyless<a class=\"anchor-hash\" href=\"#experimentalproxyless\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>The proxyless mode is <strong>experimental</strong>.</p>\r\n</div>\r\n<p>Enable the experimental proxyless mode to automate Google Chrome with the native CDP protocol. The proxyless mode increases test speed and improves test stability.</p>\r\n<pre><code class=\"lang-json\">{\r\n   &quot;experimentalProxyless&quot;: &quot;true&quot;\r\n}   \r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--experimental-proxyless\">--experimental-proxyless</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe({ experimentalProxyless })</a></p>\r\n<h3 id=\"experimentaldebug__$\"><a class=\"anchor-fix\" href=\"#experimentaldebug\" id=\"experimentaldebug\"></a>experimentalDebug<a class=\"anchor-hash\" href=\"#experimentaldebug\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>This debug mode is <strong>experimental</strong>.</p>\r\n</div>\r\n<p>Specify this option to evaluate <a class=\"xref\" href=\"/documentation/402666/reference/test-api/selector\">selectors</a> and <a class=\"xref\" href=\"/documentation/402832/guides/basic-guides/client-functions\">client functions</a> in the Watch panel of a Node.js debugger.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;experimentalDebug&quot;: true\r\n}\r\n</code></pre><p>In the <a class=\"xref\" href=\"/documentation/402835/guides/basic-guides/debug-tests#debug-test-code\">debugger</a>, call selectors and client functions as synchronous. For example, your test contains the following code:</p>\r\n<pre><code class=\"lang-js\">await Selector(&#39;body&#39;).innerText\r\n...\r\nawait ClientFunction(() =&gt; location.href)\r\n</code></pre><p>To evaluate these expressions in your debugger, specify them without the <code>await</code> keyword:</p>\r\n<pre><code class=\"lang-js\">Selector(&#39;body&#39;)().innerText\r\n...\r\nClientFunction(() =&gt; location.href)()\r\n</code></pre><p>See the following topics for details:</p>\r\n<ul>\r\n<li><a class=\"xref\" href=\"/documentation/402801/recipes/debugging/chrome-dev-tools\">Debug in Chrome Developer Tools</a></li>\r\n<li><a class=\"xref\" href=\"/documentation/402800/recipes/debugging/visual-studio-code\">Debug in Visual Studio Code</a></li>\r\n</ul>\r\n<h4 id=\"limitations__$\"><a class=\"anchor-fix\" href=\"#limitations\" id=\"limitations\"></a>Limitations<a class=\"anchor-hash\" href=\"#limitations\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<ul>\r\n<li>Use Node.js v14.0.0 and later.</li>\r\n<li>In TypeScript tests, TestCafe fails to evaluate selectors and client functions from the <a class=\"xref\" href=\"/documentation/402826/guides/best-practices/page-model\">Page Model</a> if a test does not use them in code. This case occurs because TypeScript removes unused module imports. See also: <a href=\"https://github.com/Microsoft/TypeScript/wiki/FAQ#why-are-imports-being-elided-in-my-emit\" target=\"_blank\">FAQ: Why are imports being elided in my emit?<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</li>\r\n<li>TestCafe supports experimental debug mode for the .js and .ts test files and does not support <a class=\"xref\" href=\"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript\">coffeeScript</a> tests.</li>\r\n</ul>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--experimental-debug\">--experimental-debug</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ experimentalDebug })</a></p>\r\n<h3 id=\"skipjserrors__$\"><a class=\"anchor-fix\" href=\"#skipjserrors\" id=\"skipjserrors\"></a>skipJsErrors<a class=\"anchor-hash\" href=\"#skipjserrors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<blockquote><p>Main article: <a class=\"xref\" href=\"/documentation/404038/recipes/debugging/skip-javascript-errors\">Skip JavaScript Errors</a></p>\r\n</blockquote>\r\n<p>TestCafe tests fail when a page yields a JavaScript error. Use the <code>skipJsErrors</code> option to <em>ignore</em> JavaScript errors.</p>\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>Errors are signs of malfunction. Do not ignore errors that you can fix. <br>\r\nIf a page outputs unwarranted error messages, modify your application to prevent this behavior. <br>\r\nUse the <code>skipJsErrors</code> option to silence errors that you cannot act upon. <br></p>\r\n</div>\r\n<h4 id=\"skip-all-javascript-errors__$\"><a class=\"anchor-fix\" href=\"#skip-all-javascript-errors\" id=\"skip-all-javascript-errors\"></a>Skip all JavaScript errors<a class=\"anchor-hash\" href=\"#skip-all-javascript-errors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>If you don’t specify additional options, TestCafe ignores all JavaScript errors:</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;skipJsErrors&quot;: true\r\n}\r\n</code></pre><h4 id=\"skip-javascript-errors-by-message-url-and-stack__$\"><a class=\"anchor-fix\" href=\"#skip-javascript-errors-by-message-url-and-stack\" id=\"skip-javascript-errors-by-message-url-and-stack\"></a>Skip JavaScript errors by message, URL, and stack<a class=\"anchor-hash\" href=\"#skip-javascript-errors-by-message-url-and-stack\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specify options to filter errors by string or regular expression. </p>\r\n<div class=\"WARNING\"><p class=\"alert-title\">Warning</p><p>Enclose regular expressions in forward slashes to avoid strict matches for special characters.</p>\r\n</div>\r\n<ul>\r\n<li>If you specify the <code>message</code> option, TestCafe ignores JavaScript errors with messages that match the regular expression:<pre><code class=\"lang-json\">{\r\n    &quot;skipJsErrors&quot;: {\r\n        &quot;message&quot;: /.*User ID.*/ig\r\n    }\r\n}\r\n</code></pre></li>\r\n<li>If you specify the <code>pageUrl</code> option, TestCafe ignores JavaScript errors on pages with URLs that match the regular expression:<pre><code class=\"lang-json\">{\r\n    &quot;skipJsErrors&quot;: {\r\n        &quot;pageUrl&quot;: /.*.*html/\r\n    }\r\n}\r\n</code></pre></li>\r\n<li>If you specify the <code>stack</code> option, TestCafe ignores JavaScript errors with call stacks that match the regular expression:<pre><code class=\"lang-json\">{\r\n    &quot;skipJsErrors&quot;: {\r\n        &quot;stack&quot;: /.*jquery.*/ig\r\n    }\r\n}\r\n</code></pre></li>\r\n<li>Specify several arguments to skip errors that fit <strong>multiple criteria at once</strong> — for example, errors with a specific message <strong>and</strong> a specific call stack. <pre><code class=\"lang-json\">{\r\n    &quot;skipJsErrors&quot;: {\r\n        &quot;stack&quot;: &quot;/.*jquery.*/&quot;,\r\n        &quot;message&quot;: &quot;/.*User ID.*/ig&quot;\r\n    }\r\n}\r\n</code></pre></li>\r\n</ul>\r\n<h4 id=\"use-custom-logic-to-skip-javascript-errors__$\"><a class=\"anchor-fix\" href=\"#use-custom-logic-to-skip-javascript-errors\" id=\"use-custom-logic-to-skip-javascript-errors\"></a>Use custom logic to skip JavaScript errors<a class=\"anchor-hash\" href=\"#use-custom-logic-to-skip-javascript-errors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Use a <strong>JavaScript configuration file</strong> to define a callback function with custom logic:</p>\r\n<pre><code class=\"lang-js\">const callbackFunction = {\r\n    fn:           ({ message }) =&gt; message.includes(&#39;User&#39;) || stack.includes(&#39;jquery&#39;);\r\n};\r\n\r\nmodule.exports = {\r\n    skipJsErrors: callbackFunction,\r\n};\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-e-messagevalue-stackvalue2-pageurlvalue3---skip-js-errors-messagevalue-stackvalue2-pageurlvalue3\">-e, --skip-js-errors</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run#skipjserrors\">runner.run({ skipJsErrors })</a></p>\r\n<h3 id=\"skipuncaughterrors__$\"><a class=\"anchor-fix\" href=\"#skipuncaughterrors\" id=\"skipuncaughterrors\"></a>skipUncaughtErrors<a class=\"anchor-hash\" href=\"#skipuncaughterrors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Ignores uncaught errors and unhandled promise rejections in test code.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;skipUncaughtErrors&quot;: true\r\n}\r\n</code></pre><p>When an uncaught error or unhandled promise rejection occurs on the server during test execution, TestCafe stops the test and posts an error message to a report. To ignore these errors, use the <code>skipUncaughtErrors</code> property.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-u---skip-uncaught-errors\">-u, --skip-uncaught-errors</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ skipUncaughtErrors })</a></p>\r\n<h3 id=\"filter__$\"><a class=\"anchor-fix\" href=\"#filter\" id=\"filter\"></a>filter<a class=\"anchor-hash\" href=\"#filter\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specify one of the <code>filter</code> options to select tests and fixtures by name or metadata. If you use a <a href=\"#javascript\">JavaScript configuration file</a>, you can filter tests by function.</p>\r\n<h4 id=\"filter-tests-by-function__$\"><a class=\"anchor-fix\" href=\"#filter-tests-by-function\" id=\"filter-tests-by-function\"></a>Filter tests by function<a class=\"anchor-hash\" href=\"#filter-tests-by-function\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Use a <a href=\"#javascript\">JavaScript configuration file</a> to take advantage of this capability. Pass a filter function to the <code>filter</code> option.</p>\r\n<pre><code class=\"lang-js\">module.exports = {   \r\n    filter: (testName, fixtureName, fixturePath, testMeta, fixtureMeta) =&gt; {\r\n    return fixturePath.startsWith(&#39;D&#39;) &amp;&amp;\r\n        testName.match(someRe) &amp;&amp;\r\n        fixtureName.match(anotherRe) &amp;&amp;\r\n        testMeta.mobile === &#39;true&#39; &amp;&amp;\r\n        fixtureMeta.env === &#39;staging&#39;;\r\n    });\r\n}\r\n</code></pre><p>The filter function accepts the following arguments:</p>\r\n<ul>\r\n<li>testName\r\n  The name of the test.</li>\r\n<li>fixtureName\r\n  The name of the test fixture.</li>\r\n<li>fixturePath\r\n  Path to the fixture file.</li>\r\n<li>testMeta\r\n  Test metadata.</li>\r\n<li>fixtureMeta\r\n  Fixture metadata.</li>\r\n</ul>\r\n<h4 id=\"filtertest__$\"><a class=\"anchor-fix\" href=\"#filtertest\" id=\"filtertest\"></a>filter.test<a class=\"anchor-hash\" href=\"#filtertest\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Runs a test with the specified name.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;filter&quot;: {\r\n        &quot;test&quot;: &quot;Click a label&quot;\r\n    }\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-t-name---test-name\">-t, --test</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402657/reference/testcafe-api/runner/filter\">runner.filter</a></p>\r\n<h4 id=\"filtertestgrep__$\"><a class=\"anchor-fix\" href=\"#filtertestgrep\" id=\"filtertestgrep\"></a>filter.testGrep<a class=\"anchor-hash\" href=\"#filtertestgrep\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Runs tests whose names match the specified <code>grep</code> pattern.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;filter&quot;: {\r\n        &quot;testGrep&quot;: &quot;Click.*&quot;\r\n    }\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-t-pattern---test-grep-pattern\">-T, --test-grep</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402657/reference/testcafe-api/runner/filter\">runner.filter</a></p>\r\n<h4 id=\"filterfixture__$\"><a class=\"anchor-fix\" href=\"#filterfixture\" id=\"filterfixture\"></a>filter.fixture<a class=\"anchor-hash\" href=\"#filterfixture\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Runs a test with the specified fixture name.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;filter&quot;: {\r\n        &quot;fixture&quot;: &quot;Sample fixture&quot;\r\n    }\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-f-name---fixture-name\">-f, --fixture</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402657/reference/testcafe-api/runner/filter\">runner.filter</a></p>\r\n<h4 id=\"filterfixturegrep__$\"><a class=\"anchor-fix\" href=\"#filterfixturegrep\" id=\"filterfixturegrep\"></a>filter.fixtureGrep<a class=\"anchor-hash\" href=\"#filterfixturegrep\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Runs tests whose fixture names match the specified <code>grep</code> pattern.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;filter&quot;: {\r\n        &quot;fixtureGrep&quot;: &quot;Page.*&quot;\r\n    }\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-f-pattern---fixture-grep-pattern\">-F, --fixture-grep</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402657/reference/testcafe-api/runner/filter\">runner.filter</a></p>\r\n<h4 id=\"filtertestmeta__$\"><a class=\"anchor-fix\" href=\"#filtertestmeta\" id=\"filtertestmeta\"></a>filter.testMeta<a class=\"anchor-hash\" href=\"#filtertestmeta\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Runs tests with the specified <a class=\"xref\" href=\"/documentation/403436/guides/intermediate-guides/metadata-and-filtering\">metadata</a>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;filter&quot;: {\r\n        &quot;testMeta&quot;: {\r\n            &quot;device&quot;: &quot;mobile&quot;,\r\n            &quot;env&quot;: &quot;production&quot;\r\n        }\r\n    }\r\n}\r\n</code></pre><p>The configuration example above instructs TestCafe to only run tests that meet the following requirements:</p>\r\n<ul>\r\n<li>The value of the <code>device</code> metadata property is <code>mobile</code>.</li>\r\n<li>The value of the <code>env</code> metadata property is <code>production</code>.</li>\r\n</ul>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--test-meta-keyvaluekey2value2\">--test-meta</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402657/reference/testcafe-api/runner/filter\">runner.filter</a></p>\r\n<h4 id=\"filterfixturemeta__$\"><a class=\"anchor-fix\" href=\"#filterfixturemeta\" id=\"filterfixturemeta\"></a>filter.fixtureMeta<a class=\"anchor-hash\" href=\"#filterfixturemeta\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Runs fixtures with the specified <a class=\"xref\" href=\"/documentation/403436/guides/intermediate-guides/metadata-and-filtering\">metadata</a>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;filter&quot;: {\r\n        &quot;fixtureMeta&quot;: {\r\n            &quot;device&quot;: &quot;mobile&quot;,\r\n            &quot;env&quot;: &quot;production&quot;\r\n        }\r\n    }\r\n}\r\n</code></pre><p>The configuration example above instructs TestCafe to only run fixtures that meet the following requirements:</p>\r\n<ul>\r\n<li>The value of the <code>device</code> metadata property is <code>mobile</code>.</li>\r\n<li>The value of the <code>env</code> metadata property is <code>production</code>.</li>\r\n</ul>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--fixture-meta-keyvaluekey2value2\">--fixture-meta</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402657/reference/testcafe-api/runner/filter\">runner.filter</a></p>\r\n<h3 id=\"appcommand__$\"><a class=\"anchor-fix\" href=\"#appcommand\" id=\"appcommand\"></a>appCommand<a class=\"anchor-hash\" href=\"#appcommand\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Executes a shell command and runs tests.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;appCommand&quot;: &quot;node server.js&quot;\r\n}\r\n</code></pre><p>Use the <code>appCommand</code> property to launch the application you need to test. TestCafe terminates this application after testing is completed.</p>\r\n<p>The <a href=\"#appinitdelay\">appInitDelay</a> property specifies the amount of time allowed for this command to initialize the tested application.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>TestCafe adds <code>node_modules/.bin</code> to <code>PATH</code>, so that you can use the binaries from the locally installed dependencies without prefixes.</p>\r\n</div>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-a-command---app-command\">-a, --app</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402652/reference/testcafe-api/runner/startapp\">runner.startApp</a></p>\r\n<h3 id=\"appinitdelay__$\"><a class=\"anchor-fix\" href=\"#appinitdelay\" id=\"appinitdelay\"></a>appInitDelay<a class=\"anchor-hash\" href=\"#appinitdelay\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the time (in milliseconds) during which an application is initialized if you launch the application with the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-a-command---app-command\">--app</a> option.</p>\r\n<p>TestCafe waits for the specified amount of time before it starts tests.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;appCommand&quot;: &quot;node server.js&quot;,\r\n    &quot;appInitDelay&quot;: 3000\r\n}\r\n</code></pre><p><strong>Default value</strong>: <code>1000</code></p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--app-init-delay-ms\">--app-init-delay</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402652/reference/testcafe-api/runner/startapp\">runner.startApp</a></p>\r\n<h3 id=\"concurrency__$\"><a class=\"anchor-fix\" href=\"#concurrency\" id=\"concurrency\"></a>concurrency<a class=\"anchor-hash\" href=\"#concurrency\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the number of browser instances that should run tests concurrently.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;concurrency&quot;: 3\r\n}\r\n</code></pre><p>TestCafe opens several instances of the same browser and creates a pool of browser instances. Tests are run concurrently against this pool; that is, each test is run in the first free instance.</p>\r\n<p>See <a class=\"xref\" href=\"/documentation/403626/guides/intermediate-guides/run-tests-concurrently\">Concurrent Test Execution</a> for more information about concurrent test execution.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-c-n---concurrency-n\">-c, --concurrency</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402658/reference/testcafe-api/runner/concurrency\">runner.concurrency</a></p>\r\n<h3 id=\"selectortimeout__$\"><a class=\"anchor-fix\" href=\"#selectortimeout\" id=\"selectortimeout\"></a>selectorTimeout<a class=\"anchor-hash\" href=\"#selectortimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the time (in milliseconds) within which <a class=\"xref\" href=\"/documentation/402829/guides/basic-guides/element-selectors\">selectors</a> attempt to return a node. See <a class=\"xref\" href=\"/documentation/402829/guides/basic-guides/element-selectors#timeout\">Selector Timeout</a> for details.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;selectorTimeout&quot;: 3000\r\n}\r\n</code></pre><p><strong>Default value</strong>: <code>10000</code></p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--selector-timeout-ms\">--selector-timeout</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ selectorTimeout })</a></p>\r\n<h3 id=\"assertiontimeout__$\"><a class=\"anchor-fix\" href=\"#assertiontimeout\" id=\"assertiontimeout\"></a>assertionTimeout<a class=\"anchor-hash\" href=\"#assertiontimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the time (in milliseconds) within which TestCafe attempts to successfully execute an <a class=\"xref\" href=\"/documentation/402837/guides/basic-guides/assertions\">assertion</a>\r\nif you pass a <a class=\"xref\" href=\"/documentation/403654/recipes/basics/selector-recipes#use-selectors-in-assertions\">selector property</a> or a <a class=\"xref\" href=\"/documentation/402832/guides/basic-guides/client-functions\">client function</a> as an actual value.</p>\r\n<p>See <a class=\"xref\" href=\"/documentation/402837/guides/basic-guides/assertions#smart-assertion-query-mechanism\">Smart Assertion Query Mechanism</a>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;assertionTimeout&quot;: 1000\r\n}\r\n</code></pre><p><strong>Default value</strong>: <code>3000</code></p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--assertion-timeout-ms\">--assertion-timeout</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ assertionTimeout })</a></p>\r\n<h3 id=\"pageloadtimeout__$\"><a class=\"anchor-fix\" href=\"#pageloadtimeout\" id=\"pageloadtimeout\"></a>pageLoadTimeout<a class=\"anchor-hash\" href=\"#pageloadtimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the time (in milliseconds) passed after the <code>DOMContentLoaded</code> event within which TestCafe waits for the <code>window.load</code> event to fire.</p>\r\n<p>After the timeout passes or the <code>window.load</code> event is raised (whichever happens first), TestCafe starts the test.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;pageLoadTimeout&quot;: 1000\r\n}\r\n</code></pre><p><strong>Default value</strong>: <code>3000</code></p>\r\n<p>See the command line <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--page-load-timeout-ms\">--page-load-timeout</a> parameter for details.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--page-load-timeout-ms\">--page-load-timeout</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ pageLoadTimeout })</a></p>\r\n<h3 id=\"ajaxrequesttimeout__$\"><a class=\"anchor-fix\" href=\"#ajaxrequesttimeout\" id=\"ajaxrequesttimeout\"></a>ajaxRequestTimeout<a class=\"anchor-hash\" href=\"#ajaxrequesttimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies wait time (in milliseconds) for fetch/XHR requests. If TestCafe receives no response within the specified period, it throws an error.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;ajaxRequestTimeout&quot;: 40000\r\n}\r\n</code></pre><p><strong>Default value</strong>: <code>120000</code></p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--ajax-request-timeout-ms\">--ajax-request-timeout</a></p>\r\n<h3 id=\"pagerequesttimeout__$\"><a class=\"anchor-fix\" href=\"#pagerequesttimeout\" id=\"pagerequesttimeout\"></a>pageRequestTimeout<a class=\"anchor-hash\" href=\"#pagerequesttimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies time (in milliseconds) to wait for HTML pages. If TestCafe does not receive a page within the specified period, it throws an error.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;pageRequestTimeout&quot;: 8000\r\n}\r\n</code></pre><p><strong>Default value</strong>: <code>25000</code></p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--page-request-timeout-ms\">--page-request-timeout</a></p>\r\n<h3 id=\"browserinittimeout__$\"><a class=\"anchor-fix\" href=\"#browserinittimeout\" id=\"browserinittimeout\"></a>browserInitTimeout<a class=\"anchor-hash\" href=\"#browserinittimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Time (in milliseconds) for browsers to connect to TestCafe and report that they are ready to test. If one or more browsers fail to connect within the specified period, TestCafe throws an error.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;browserInitTimeout&quot;: 180000\r\n}\r\n</code></pre><p>In this example, the timeout for local and remote browsers is three minutes. In this run, all browsers have to connect within this time before TestCafe throws an error.</p>\r\n<p><strong>Default values</strong>:</p>\r\n<ul>\r\n<li><code>120000</code> for <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#local-browsers\">local browsers</a></li>\r\n<li><code>360000</code> for <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#remote-browsers\">remote browsers</a></li>\r\n</ul>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--browser-init-timeout-ms\">--browser-init-timeout</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ browserInitTimeout })</a></p>\r\n<h3 id=\"testexecutiontimeout__$\"><a class=\"anchor-fix\" href=\"#testexecutiontimeout\" id=\"testexecutiontimeout\"></a>testExecutionTimeout<a class=\"anchor-hash\" href=\"#testexecutiontimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Maximum test execution time (in milliseconds). When the total execution time of a test exceeds this value, TestCafe terminates the test. This behavior occurs even if the browser is responsive.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;testExecutionTimeout&quot;: 180000\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--test-execution-timeout-ms\">--test-execution-timeout</a>  </p>\r\n<h3 id=\"runexecutiontimeout__$\"><a class=\"anchor-fix\" href=\"#runexecutiontimeout\" id=\"runexecutiontimeout\"></a>runExecutionTimeout<a class=\"anchor-hash\" href=\"#runexecutiontimeout\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Maximum test run execution time (in milliseconds). When the total execution time of a run exceeds this value, TestCafe terminates the test run. This behavior occurs even if one of the tests or hooks is active.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;runExecutionTimeout&quot;: 180000\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--run-execution-timeout-ms\">--run-execution-timeout</a>  </p>\r\n<h3 id=\"speed__$\"><a class=\"anchor-fix\" href=\"#speed\" id=\"speed\"></a>speed<a class=\"anchor-hash\" href=\"#speed\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the test execution speed.</p>\r\n<p>If this option is not specified, TestCafe runs tests at the maximum speed. You can use this option to slow a test down. The number range is between <code>1</code> (the fastest) and <code>0.01</code> (the slowest).</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;speed&quot;: 0.1\r\n}\r\n</code></pre><p><strong>Default value</strong>: <code>1</code></p>\r\n<p>If you specify the speed for an individual action, the action’s speed setting overrides the test speed.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--speed-factor\">--speed</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ speed })</a></p>\r\n<h3 id=\"clientscripts__$\"><a class=\"anchor-fix\" href=\"#clientscripts\" id=\"clientscripts\"></a>clientScripts<a class=\"anchor-hash\" href=\"#clientscripts\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Injects scripts into pages visited during tests. Use this property to introduce client-side mock functions or helper scripts.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: [\r\n        {\r\n            &quot;module&quot;: &quot;lodash&quot;\r\n        },\r\n        {\r\n            &quot;path&quot;: &quot;scripts/react-helpers.js&quot;,\r\n            &quot;page&quot;: &quot;https://myapp.com/page/&quot;\r\n        }\r\n    ]\r\n}\r\n</code></pre><h4 id=\"inject-a-javascript-file__$\"><a class=\"anchor-fix\" href=\"#inject-a-javascript-file\" id=\"inject-a-javascript-file\"></a>Inject a JavaScript File<a class=\"anchor-hash\" href=\"#inject-a-javascript-file\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specify the JavaScript file path to inject the content of this file into the tested pages. You can pass a string or object with the <code>path</code> property.</p>\r\n<pre><code class=\"lang-js\">{\r\n    &quot;clientScripts&quot;: &quot;&lt;filePath&gt;&quot; | { &quot;path&quot;: &quot;&lt;filePath&gt;&quot; }\r\n}\r\n{\r\n    &quot;clientScripts&quot;: [ &quot;&lt;filePath&gt;&quot; | { &quot;path&quot;: &quot;&lt;filePath&gt;&quot; } ]\r\n}\r\n</code></pre><table>\r\n<thead>\r\n<tr>\r\n<th>Argument</th>\r\n<th>Type</th>\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>filePath</code></td>\r\n<td>String</td>\r\n<td>The path to the JavaScript file whose content should be injected.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>You cannot combine the <code>path</code>, <a href=\"#inject-a-module\">module</a> and <a href=\"#inject-script-code\">content</a> properties in a single object. To inject multiple items, pass several arguments or an array.</p>\r\n</div>\r\n<p>TestCafe resolves relative paths against the <em>current working directory</em>.</p>\r\n<p><strong>Example</strong></p>\r\n<pre><code class=\"lang-js\">{\r\n    &quot;clientScripts&quot;: &quot;assets/jquery.js&quot;,\r\n    // or\r\n    &quot;clientScripts&quot;: { &quot;path&quot;: &quot;assets/jquery.js&quot; }\r\n}\r\n</code></pre><h4 id=\"inject-a-module__$\"><a class=\"anchor-fix\" href=\"#inject-a-module\" id=\"inject-a-module\"></a>Inject a Module<a class=\"anchor-hash\" href=\"#inject-a-module\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Specify the Node.js module’s name to inject its content into the tested pages. Use an object with the <code>module</code> property.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: { &quot;module&quot;: &quot;&lt;moduleName&gt;&quot; }\r\n}\r\n{\r\n    &quot;clientScripts&quot;: [ { &quot;module&quot;: &quot;&lt;moduleName&gt;&quot; } ]\r\n}\r\n</code></pre><table>\r\n<thead>\r\n<tr>\r\n<th>Argument</th>\r\n<th>Type</th>\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>moduleName</code></td>\r\n<td>String</td>\r\n<td>The module name.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>You cannot combine the <code>module</code>, <a href=\"#inject-a-javascript-file\">path</a> and <a href=\"#inject-script-code\">content</a> properties in a single object. To inject multiple items, pass several arguments or an array.</p>\r\n</div>\r\n<p>TestCafe uses Node.js mechanisms to search for the module’s entry point and injects its content into the tested page.</p>\r\n<p>The browser must be able to execute the injected module. For example, modules that implement the <a href=\"https://github.com/umdjs/umd\" target=\"_blank\">UMD<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> API can run in most modern browsers.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>If the injected module has dependencies, ensure that the dependencies can be loaded as global variables and these variables are initialized in the page’s code.</p>\r\n</div>\r\n<p><strong>Example</strong></p>\r\n<pre><code class=\"lang-js\">{\r\n    &quot;clientScripts&quot;: {\r\n        &quot;module&quot;: &quot;lodash&quot;\r\n    }\r\n}\r\n</code></pre><h4 id=\"inject-script-code__$\"><a class=\"anchor-fix\" href=\"#inject-script-code\" id=\"inject-script-code\"></a>Inject Script Code<a class=\"anchor-hash\" href=\"#inject-script-code\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>You can pass an object with the <code>content</code> property to provide the injected script as a string.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: { &quot;content&quot;: &quot;&lt;code&gt;&quot; }\r\n}\r\n{\r\n    &quot;clientScripts&quot;: [ { &quot;content&quot;: &quot;&lt;code&gt;&quot; } ]\r\n}\r\n</code></pre><table>\r\n<thead>\r\n<tr>\r\n<th>Argument</th>\r\n<th>Type</th>\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>code</code></td>\r\n<td>String</td>\r\n<td>JavaScript that should be injected.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>You cannot combine the <code>content</code>, <a href=\"#inject-a-javascript-file\">path</a> and <a href=\"#inject-a-module\">module</a> properties in a single object. To inject multiple items, pass several arguments or an array.</p>\r\n</div>\r\n<p><strong>Example</strong></p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: {\r\n        &quot;content&quot;: &quot;Date.prototype.getTime = () =&gt; 42;&quot;\r\n    }\r\n}\r\n</code></pre><h4 id=\"provide-scripts-for-specific-pages__$\"><a class=\"anchor-fix\" href=\"#provide-scripts-for-specific-pages\" id=\"provide-scripts-for-specific-pages\"></a>Provide Scripts for Specific Pages<a class=\"anchor-hash\" href=\"#provide-scripts-for-specific-pages\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>You can also specify pages into which a script should be injected. This will allow you to mock browser API on specified pages and use the default behavior everywhere else.</p>\r\n<p>To specify target pages for a script, add the <code>page</code> property to the object you pass to <code>clientScripts</code>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: {\r\n        &quot;page&quot;: &quot;&lt;url&gt;&quot;,\r\n        &quot;path&quot;: &quot;&lt;filePath&gt;&quot; | &quot;module&quot;: &quot;&lt;moduleName&gt;&quot; | &quot;content&quot;: &quot;&lt;code&gt;&quot;\r\n    }\r\n}\r\n{\r\n    &quot;clientScripts&quot;: [\r\n        {\r\n            &quot;page&quot;: &quot;&lt;url&gt;&quot;,\r\n            &quot;path&quot;: &quot;&lt;filePath&gt;&quot; | &quot;module&quot;: &quot;&lt;moduleName&gt;&quot; | &quot;content&quot;: &quot;&lt;code&gt;&quot;\r\n        }\r\n    ]\r\n}\r\n</code></pre><table>\r\n<thead>\r\n<tr>\r\n<th>Property</th>\r\n<th>Type</th>\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>url</code></td>\r\n<td>String</td>\r\n<td>Specify a page URL to add scripts to a page.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>If the target page redirects to a different URL, ensure that the <code>page</code> property matches the destination URL. Otherwise, scripts are not injected.</p>\r\n</div>\r\n<p><strong>Example</strong></p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: {\r\n        &quot;page&quot;: &quot;https://myapp.com/page/&quot;,\r\n        &quot;content&quot;: &quot;Geolocation.prototype.getCurrentPosition = () =&gt; new Positon(0, 0);&quot;\r\n    }\r\n}\r\n</code></pre><div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>Note that regular expressions are not supported in the configuration file. Use the following APIs to <a class=\"xref\" href=\"/documentation/402843/guides/advanced-guides/inject-client-scripts#provide-scripts-for-specific-pages\">define target pages</a> with a regular expression:</p>\r\n<ul>\r\n<li><strong>Runner</strong>: The <a class=\"xref\" href=\"/documentation/402660/reference/testcafe-api/runner/clientscripts\">runner.clientScripts</a> method.</li>\r\n<li><strong>Test</strong>: The <a class=\"xref\" href=\"/documentation/402737/reference/test-api/test/clientscripts\">tests</a> method.</li>\r\n<li><strong>Fixture</strong>: The <a class=\"xref\" href=\"/documentation/402783/reference/test-api/fixture/clientscripts\">fixtures</a> method.</li>\r\n</ul>\r\n</div>\r\n<p>The <a class=\"xref\" href=\"/documentation/402783/reference/test-api/fixture/clientscripts\">fixture.clientScripts</a> and <a class=\"xref\" href=\"/documentation/402737/reference/test-api/test/clientscripts\">test.clientScripts</a> methods allow you to inject scripts into pages visited during an individual fixture or test.</p>\r\n<p>For more information, see <a class=\"xref\" href=\"/documentation/402843/guides/advanced-guides/inject-client-scripts\">Inject Scripts into Tested Pages</a>.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--cs-pathpath2---client-scripts-pathpath2\">--cs, --client-scripts</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402660/reference/testcafe-api/runner/clientscripts\">runner.clientScripts</a></p>\r\n<h3 id=\"port1-port2__$\"><a class=\"anchor-fix\" href=\"#port1-port2\" id=\"port1-port2\"></a>port1, port2<a class=\"anchor-hash\" href=\"#port1-port2\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies custom port numbers TestCafe uses to perform testing. The number range is [0-65535].</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;port1&quot;: 12345,\r\n    &quot;port2&quot;: 54321\r\n}\r\n</code></pre><p>TestCafe automatically selects ports if ports are not specified.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--ports-port1port2\">--ports</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe</a></p>\r\n<h3 id=\"hostname__$\"><a class=\"anchor-fix\" href=\"#hostname\" id=\"hostname\"></a>hostname<a class=\"anchor-hash\" href=\"#hostname\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies your computer’s hostname. TestCafe uses this hostname when you run tests in remote browsers.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;hostname&quot;: &quot;host.mycorp.com&quot;\r\n}\r\n</code></pre><p>If the hostname is not specified, TestCafe uses the operating system’s hostname or the current machine’s network IP address.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--hostname-name\">--hostname</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe</a></p>\r\n<h3 id=\"proxy__$\"><a class=\"anchor-fix\" href=\"#proxy\" id=\"proxy\"></a>proxy<a class=\"anchor-hash\" href=\"#proxy\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies the proxy server used in your local network to access the Internet.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;proxy&quot;: &quot;proxy.corp.mycompany.com&quot;\r\n}\r\n</code></pre><pre><code class=\"lang-json\">{\r\n    &quot;proxy&quot;: &quot;172.0.10.10:8080&quot;\r\n}\r\n</code></pre><p>You can also specify authentication credentials with the proxy host.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;proxy&quot;: &quot;username:password@proxy.mycorp.com&quot;\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--proxy-host\">--proxy</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402649/reference/testcafe-api/runner/useproxy\">runner.useProxy</a></p>\r\n<h3 id=\"proxybypass__$\"><a class=\"anchor-fix\" href=\"#proxybypass\" id=\"proxybypass\"></a>proxyBypass<a class=\"anchor-hash\" href=\"#proxybypass\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Requires that TestCafe bypasses the proxy server to access specified resources.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;proxyBypass&quot;: &quot;*.mycompany.com&quot;\r\n}\r\n</code></pre><pre><code class=\"lang-json\">{\r\n    &quot;proxyBypass&quot;: [&quot;localhost:8080&quot;, &quot;internal-resource.corp.mycompany.com&quot;]\r\n}\r\n</code></pre><p>See the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--proxy-bypass-rules\">--proxy-bypass</a> command line parameter for details.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--proxy-bypass-rules\">--proxy-bypass</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402649/reference/testcafe-api/runner/useproxy\">runner.useProxy</a></p>\r\n<h3 id=\"ssl__$\"><a class=\"anchor-fix\" href=\"#ssl\" id=\"ssl\"></a>ssl<a class=\"anchor-hash\" href=\"#ssl\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Provides options that allow you to establish an HTTPS connection between the client browser and the TestCafe server.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;ssl&quot;: {\r\n        &quot;pfx&quot;: &quot;path/to/file.pfx&quot;,\r\n        &quot;rejectUnauthorized&quot;: true\r\n    }\r\n}\r\n</code></pre><p>See the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--ssl-options\">--ssl</a> command line parameter for details.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--ssl-options\">--ssl</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe</a></p>\r\n<h3 id=\"developmentmode__$\"><a class=\"anchor-fix\" href=\"#developmentmode\" id=\"developmentmode\"></a>developmentMode<a class=\"anchor-hash\" href=\"#developmentmode\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Enables mechanisms to log and diagnose errors. Enable this option if you plan to contact TestCafe Support to report an issue.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;developmentMode&quot;: true\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--dev\">--dev</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe</a></p>\r\n<h3 id=\"qrcode__$\"><a class=\"anchor-fix\" href=\"#qrcode\" id=\"qrcode\"></a>qrCode<a class=\"anchor-hash\" href=\"#qrcode\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>If you launch TestCafe from the console, this option outputs a QR code that contains URLs used to connect the remote browsers.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;qrCode&quot;: true\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--qr-code\">--qr-code</a>  </p>\r\n<h3 id=\"stoponfirstfail__$\"><a class=\"anchor-fix\" href=\"#stoponfirstfail\" id=\"stoponfirstfail\"></a>stopOnFirstFail<a class=\"anchor-hash\" href=\"#stoponfirstfail\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Stops a test run if a test fails.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;stopOnFirstFail&quot;: true\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--sf---stop-on-first-fail\">--sf, --stop-on-first-fail</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ stopOnFirstFail })</a></p>\r\n<h3 id=\"tsconfigpath__$\"><a class=\"anchor-fix\" href=\"#tsconfigpath\" id=\"tsconfigpath\"></a>tsConfigPath<a class=\"anchor-hash\" href=\"#tsconfigpath\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Deprecated as of TestCafe v.1.10.0 in favor of the <code>compilerOptions</code> setting.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--ts-config-path-path\">--ts-config-path</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402650/reference/testcafe-api/runner/tsconfigpath\">runner.tsConfigPath</a></p>\r\n<h3 id=\"compileroptions__$\"><a class=\"anchor-fix\" href=\"#compileroptions\" id=\"compileroptions\"></a>compilerOptions<a class=\"anchor-hash\" href=\"#compileroptions\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p><a class=\"xref\" href=\"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript#customize-compiler-options\">TypeScript compiler</a>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;compilerOptions&quot;: {\r\n         &quot;typescript&quot;: {\r\n              &quot;customCompilerModulePath&quot;: &quot;path to custom Typescript compiler module&quot;,\r\n              &quot;options&quot;: { &quot;experimentalDecorators&quot;: &quot;true&quot;,  &quot;newLine&quot;: &quot;crlf&quot;}\r\n    }\r\n}\r\n</code></pre><p>Populate the <code>typescript.options</code> object with <a href=\"https://www.typescriptlang.org/docs/handbook/compiler-options.html\" target=\"_blank\">TypeScript compiler options<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<p>Set the <code>typescript.configPath</code> parameter to load TypeScript compilation settings from a dedicated <a href=\"https://www.typescriptlang.org/tsconfig/\" target=\"_blank\">tsconfig.json<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> file.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;compilerOptions&quot;: {\r\n         &quot;typescript&quot;: { &quot;configPath&quot;: &quot;path-to-custom-ts-config.json&quot;}\r\n    }\r\n}\r\n</code></pre><p>Set the <code>typescript.compilerModulePath</code> parameter to load an external TypeScript compiler.</p>\r\n<pre><code class=\"lang-json\">{\r\n   &quot;compilerOptions&quot;: {\r\n       &quot;typescript&quot;:   { &quot;customCompilerModulePath&quot;: &quot;path to custom Typescript compiler module&quot; }\r\n    }\r\n}\r\n</code></pre><div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>TestCafe resolves user-specified relative paths against the TestCafe installation folder.</p>\r\n</div>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--compiler-options-options\">--compiler-options</a>\r\n<em>API</em>: <a class=\"xref\" href=\"/documentation/402659/reference/testcafe-api/runner/compileroptions\">runner.compilerOptions</a></p>\r\n<h3 id=\"cache__$\"><a class=\"anchor-fix\" href=\"#cache\" id=\"cache\"></a>cache<a class=\"anchor-hash\" href=\"#cache\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>If this option is enabled, the TestCafe proxy caches assets (such as stylesheets and scripts) of the processed web pages. The next time the proxy accesses the page, it pulls assets from its cache instead of requesting them from the server.</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome my-tests --cache\r\n</code></pre><p>TestCafe emulates the browser’s native caching behavior. For example, in <em>Chrome</em>, TestCafe only caches resources that <em>Chrome</em> itself would cache if run without TestCafe.</p>\r\n<p>TestCafe caches scripts, stylesheets, fonts, and other assets up to <strong>5 MB</strong> in size. TestCafe does not cache HTML because that could break <a class=\"xref\" href=\"/documentation/402845/guides/intermediate-guides/authentication#user-roles\">user roles</a>.</p>\r\n<p>If the tested application loads many heavy assets, enable server-side caching to decrease test run time.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--cache\">--cache</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe</a></p>\r\n<h3 id=\"disablepagecaching__$\"><a class=\"anchor-fix\" href=\"#disablepagecaching\" id=\"disablepagecaching\"></a>disablePageCaching<a class=\"anchor-hash\" href=\"#disablepagecaching\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Prevents the browser from caching page content.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;disablePageCaching&quot;: true\r\n}\r\n</code></pre><p>Users may inadvertently access cached pages that contain outdated automation scripts, for example, when they <a class=\"xref\" href=\"/documentation/402845/guides/intermediate-guides/authentication#user-roles\">activate a Role</a>. This can lead to TestCafe errors. If you encounter this issue, enable the <code>disablePageCaching</code> option to prevent the browser from caching automation scripts.</p>\r\n<p>For more information, see <a class=\"xref\" href=\"/documentation/402845/guides/intermediate-guides/authentication#test-actions-fail-after-authentication\">Troubleshooting: Test Actions Fail After Authentication</a>.</p>\r\n<p>You can disable page caching for an individual <a class=\"xref\" href=\"/documentation/402782/reference/test-api/fixture/disablepagecaching\">fixture</a> or <a class=\"xref\" href=\"/documentation/402736/reference/test-api/test/disablepagecaching\">test</a>.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--disable-page-caching\">--disable-page-caching</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ disablePageCaching })</a></p>\r\n<h3 id=\"disablemultiplewindows__$\"><a class=\"anchor-fix\" href=\"#disablemultiplewindows\" id=\"disablemultiplewindows\"></a>disableMultipleWindows<a class=\"anchor-hash\" href=\"#disablemultiplewindows\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Disables support for <a class=\"xref\" href=\"/documentation/402841/guides/intermediate-guides/multiple-browser-windows\">multi-window testing</a>.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;disableMultipleWindows&quot;: true\r\n}\r\n</code></pre><p>The <code>disableMultipleWindows</code> option disables support for multi-window testing in Chrome and Firefox. Use this setting if you encounter compatibility issues with your existing tests.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--disable-multiple-windows\">--disable-multiple-windows</a><br><em>API</em>: <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run\">runner.run({ disableMultipleWindows })</a></p>\r\n<h3 id=\"retrytestpages__$\"><a class=\"anchor-fix\" href=\"#retrytestpages\" id=\"retrytestpages\"></a>retryTestPages<a class=\"anchor-hash\" href=\"#retrytestpages\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>If this option is enabled, TestCafe retries failed network requests for web pages visited during tests. The retry functionality is limited to ten tries.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;retryTestPages&quot;: true\r\n}\r\n</code></pre><p>This feature uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\" target=\"_blank\">Service Workers<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> that require a secure connection.\r\nTo run TestCafe over a secure connection, <a class=\"xref\" href=\"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites#test-https-websites\">set up HTTPS</a> or use the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--hostname-name\">--hostname localhost</a> option.</p>\r\n<p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--retry-test-pages\">--retry-test-pages</a>\r\n<em>API</em>: <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe</a></p>\r\n<h3 id=\"color__$\"><a class=\"anchor-fix\" href=\"#color\" id=\"color\"></a>color<a class=\"anchor-hash\" href=\"#color\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Enables colors in the command line.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;color&quot;: true\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--color\">--color</a></p>\r\n<h3 id=\"nocolor__$\"><a class=\"anchor-fix\" href=\"#nocolor\" id=\"nocolor\"></a>noColor<a class=\"anchor-hash\" href=\"#nocolor\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Disables colors in the command line.</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;noColor&quot;: true\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--no-color\">--no-color</a></p>\r\n<h3 id=\"uservariables__$\"><a class=\"anchor-fix\" href=\"#uservariables\" id=\"uservariables\"></a>userVariables<a class=\"anchor-hash\" href=\"#uservariables\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specifies user variables and their values.</p>\r\n<p>Follow the steps below to add user variables and use them in a test:</p>\r\n<ol>\r\n<li><p>Add pairs of variable names and values to the <code>userVariables</code> option within the testcaferc.json file.</p>\r\n</li>\r\n<li><p>Import the <code>userVariables</code> from the <code>testcafe</code> module to the test. </p>\r\n</li>\r\n</ol>\r\n<p>.testcaferc.json:</p>\r\n<pre><code class=\"lang-json\">{\r\n  &quot;userVariables&quot;: {\r\n    &quot;url&quot;: &quot;http://devexpress.github.io/testcafe/example&quot;,\r\n  }\r\n}\r\n</code></pre><p>test.js:</p>\r\n<pre><code class=\"lang-js\">const { userVariables } = require(&#39;testcafe&#39;);\r\n\r\nfixture `Test user variables`\r\n    .page(userVariables.url);\r\n\r\ntest(&#39;Type text&#39;, async t =&gt; {\r\n    await t\r\n        .typeText(&#39;#developer-name&#39;, &#39;John Smith&#39;)\r\n        .click(&#39;#submit-button&#39;);\r\n});\r\n</code></pre><h3 id=\"disablehttp2__$\"><a class=\"anchor-fix\" href=\"#disablehttp2\" id=\"disablehttp2\"></a>disableHttp2<a class=\"anchor-hash\" href=\"#disablehttp2\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Disables support for <a href=\"https://http2.github.io/\" target=\"_blank\">HTTP/2<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> requests. </p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;disableHttp2&quot;: true\r\n}\r\n</code></pre><p><em>CLI</em>: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--disable-http2\">--disable-http2</a></p>\r\n<h3 id=\"hooks__$\"><a class=\"anchor-fix\" href=\"#hooks\" id=\"hooks\"></a>hooks<a class=\"anchor-hash\" href=\"#hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>If you use a <a href=\"#javascript\">JavaScript configuration file</a>, you can define global <a href=\"#test-hooks\">test hooks</a> and <a href=\"#request-hooks\">request hooks</a>.</p>\r\n<h4 id=\"test-hooks__$\"><a class=\"anchor-fix\" href=\"#test-hooks\" id=\"test-hooks\"></a>Test Hooks<a class=\"anchor-hash\" href=\"#test-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<blockquote><p>Main article: <a class=\"xref\" href=\"/documentation/403435/guides/intermediate-guides/hooks\">Test Hooks</a>.</p>\r\n</blockquote>\r\n<p>There are three kinds of global <em>test</em> hooks.</p>\r\n<h5 id=\"test-run-hooks__$\"><a class=\"anchor-fix\" href=\"#test-run-hooks\" id=\"test-run-hooks\"></a>Test run hooks<a class=\"anchor-hash\" href=\"#test-run-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h5>\r\n<p><a class=\"xref\" href=\"/documentation/403435/guides/intermediate-guides/hooks#hooks-before-and-after-test-runs\">Test run hooks</a> run when you launch TestCafe and just before the TestCafe process terminates.</p>\r\n<p>The following example declares a <code>before</code> test run hook and an <code>after</code> test run hook.</p>\r\n<pre><code class=\"lang-js\">const utils = require(&#39;./my-utils.js&#39;);\r\nconst { admin } = require(&#39;roles&#39;);\r\n\r\nmodule.exports = {\r\n    hooks: {\r\n        testRun: {\r\n            before: async ctx =&gt; {\r\n                ctx.serverId = 123;\r\n\r\n                utils.launchServer(ctx.serverId);\r\n            },\r\n            after:  async ctx =&gt; {\r\n                utils.terminateServer(ctx.serverId);\r\n            }\r\n        },\r\n    }\r\n};\r\n</code></pre><h5 id=\"global-fixture-hooks__$\"><a class=\"anchor-fix\" href=\"#global-fixture-hooks\" id=\"global-fixture-hooks\"></a>Global fixture hooks<a class=\"anchor-hash\" href=\"#global-fixture-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h5>\r\n<p><a class=\"xref\" href=\"/documentation/403435/guides/intermediate-guides/hooks#global-fixture-hooks\">Global fixture hooks</a> run before or after each of the fixtures in your test suite.</p>\r\n<p>The following example declares a global <code>before</code> fixture run hook and a global <code>after</code> fixture hook:</p>\r\n<pre><code class=\"lang-js\">const utils = require(&#39;./my-utils.js&#39;);\r\nconst { admin } = require(&#39;roles&#39;);\r\n\r\nmodule.exports = {\r\n    hooks: {\r\n        fixture: {\r\n            before: async ctx =&gt; {\r\n                ctx.dbName = &#39;users&#39;;\r\n\r\n                utils.populateDb(ctx.dbName);\r\n            },\r\n            after:  async ctx =&gt; {\r\n                utils.dropDb(ctx.dbName);\r\n            },\r\n        },\r\n    }\r\n};\r\n</code></pre><h5 id=\"global-test-hooks__$\"><a class=\"anchor-fix\" href=\"#global-test-hooks\" id=\"global-test-hooks\"></a>Global test hooks<a class=\"anchor-hash\" href=\"#global-test-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h5>\r\n<p><a class=\"xref\" href=\"/documentation/403435/guides/intermediate-guides/hooks#global-test-hooks\">Global test hooks</a> run before or after each of the tests in your test suite.</p>\r\n<p>The following example declares a global <code>before</code> test hook and a global <code>after</code> test hook:</p>\r\n<pre><code class=\"lang-js\">const utils = require(&#39;./my-utils.js&#39;);\r\nconst { admin } = require(&#39;roles&#39;);\r\n\r\nmodule.exports = {\r\n    hooks: {\r\n        test:    {\r\n            before: async t =&gt; {\r\n                t.ctx = &#39;test data&#39;;\r\n\r\n                await t.useRole(admin);\r\n            },\r\n            after:  async t =&gt; {\r\n                await t.click(&#39;#delete-data&#39;);\r\n                console.log(t.ctx); // &gt; test data\r\n            }\r\n        }\r\n    }\r\n};\r\n</code></pre><h4 id=\"request-hooks__$\"><a class=\"anchor-fix\" href=\"#request-hooks\" id=\"request-hooks\"></a>Request Hooks<a class=\"anchor-hash\" href=\"#request-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>You can define <strong>global</strong> RequestHooks, Request Loggers, and Mock Requests (see <a class=\"xref\" href=\"/documentation/402842/guides/intermediate-guides/intercept-http-requests\">Intercept HTTP Requests</a>). TestCafe attaches <em>global</em> request hooks to your entire test suite.</p>\r\n<p>The next example declares a global <code>request</code> hook. This hook attaches the same <code>RequestMock</code> to all tests. </p>\r\n<pre><code class=\"lang-js\">const { RequestMock } = require(&#39;testcafe&#39;);\r\n\r\nconst mock = RequestMock()\r\n    .onRequestTo(&#39;https://api.mycorp.com/users/id/135865&#39;)\r\n    .respond({\r\n        name: &#39;John Hearts&#39;,\r\n        position: &#39;CTO&#39;,\r\n    }, 200, { &#39;access-control-allow-origin&#39;: &#39;*&#39; })\r\n    .onRequestTo(/internal.mycorp.com/)\r\n    .respond(null, 404);\r\n\r\nmodule.exports = {\r\n    hooks: {\r\n        request: mock,\r\n    },\r\n};\r\n</code></pre><p>See <a class=\"xref\" href=\"/documentation/402842/guides/intermediate-guides/intercept-http-requests\">Intercept HTTP Requests</a> for additional examples of <code>request</code> hooks.</p>\r\n","headers":[{"title":"Configuration conflicts","tagName":"h2","id":"configuration-conflicts","lvl":2},{"title":"Set-up","tagName":"h2","id":"set-up","lvl":2},{"title":"Settings","tagName":"h2","id":"settings","lvl":2}],"title":"Configuration File","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402638","headerNav":{"items":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"Blog","id":"Docs/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"Support","id":"Docs/Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Docs","id":"Docs","url":"/documentation/402635/guides/overview/getting-started"},{"name":"API","id":"402632","url":"/documentation/402632/api"},{"name":"Configuration File","id":"402638","url":"/documentation/402638/reference/configuration-file"}]},"sidebarNav":{"root":{"name":"API","id":"402632","url":"/documentation/402632/api"},"items":[{"name":"Command Line Interface","id":"402639","url":"/documentation/402639/reference/command-line-interface"},{"name":"Configuration File","id":"402638","url":"/documentation/402638/reference/configuration-file"},{"name":"Test API","id":"402632/Test API","items":[{"name":"Test Object","id":"403366","url":"/documentation/403366/reference/test-api/test","items":[{"name":".after()","id":"402739","url":"/documentation/402739/reference/test-api/test/after"},{"name":".before()","id":"402738","url":"/documentation/402738/reference/test-api/test/before"},{"name":".clientScripts()","id":"402737","url":"/documentation/402737/reference/test-api/test/clientscripts"},{"name":".disablePageCaching","id":"402736","url":"/documentation/402736/reference/test-api/test/disablepagecaching"},{"name":".httpAuth()","id":"402735","url":"/documentation/402735/reference/test-api/test/httpauth"},{"name":".meta()","id":"402734","url":"/documentation/402734/reference/test-api/test/meta"},{"name":".only","id":"402733","url":"/documentation/402733/reference/test-api/test/only"},{"name":".page()","id":"402732","url":"/documentation/402732/reference/test-api/test/page"},{"name":".requestHooks()","id":"402731","url":"/documentation/402731/reference/test-api/test/requesthooks"},{"name":".skip","id":"402730","url":"/documentation/402730/reference/test-api/test/skip"},{"name":".timeouts()","id":"403062","url":"/documentation/403062/reference/test-api/test/timeouts"},{"name":".skipJsErrors()","id":"404026","url":"/documentation/404026/reference/test-api/test/skipjserrors"}]},{"name":"ClientFunction Object","id":"402671","url":"/documentation/402671/reference/test-api/clientfunction","items":[{"name":"Constructor","id":"402789","url":"/documentation/402789/reference/test-api/clientfunction/constructor"},{"name":".with()","id":"402788","url":"/documentation/402788/reference/test-api/clientfunction/with"}]},{"name":"DOMNodeState Object","id":"402670","url":"/documentation/402670/reference/test-api/domnodestate"},{"name":"RequestHook Class","id":"402669","url":"/documentation/402669/reference/test-api/requesthook","items":[{"name":"Constructor","id":"402773","url":"/documentation/402773/reference/test-api/requesthook/constructor"},{"name":".onRequest()","id":"402772","url":"/documentation/402772/reference/test-api/requesthook/onrequest"},{"name":".onResponse()","id":"402771","url":"/documentation/402771/reference/test-api/requesthook/onresponse"}]},{"name":"Fixture Class","id":"403367","url":"/documentation/403367/reference/test-api/fixture","items":[{"name":".after()","id":"402787","url":"/documentation/402787/reference/test-api/fixture/after"},{"name":".afterEach()","id":"402786","url":"/documentation/402786/reference/test-api/fixture/aftereach"},{"name":".before()","id":"402785","url":"/documentation/402785/reference/test-api/fixture/before"},{"name":".beforeEach()","id":"402784","url":"/documentation/402784/reference/test-api/fixture/beforeeach"},{"name":".clientScripts()","id":"402783","url":"/documentation/402783/reference/test-api/fixture/clientscripts"},{"name":".disablePageCaching","id":"402782","url":"/documentation/402782/reference/test-api/fixture/disablepagecaching"},{"name":".httpAuth()","id":"402781","url":"/documentation/402781/reference/test-api/fixture/httpauth"},{"name":".meta()","id":"402780","url":"/documentation/402780/reference/test-api/fixture/meta"},{"name":".only","id":"402779","url":"/documentation/402779/reference/test-api/fixture/only"},{"name":".page()","id":"402778","url":"/documentation/402778/reference/test-api/fixture/page"},{"name":".requestHooks()","id":"402777","url":"/documentation/402777/reference/test-api/fixture/requesthooks"},{"name":".skip","id":"402776","url":"/documentation/402776/reference/test-api/fixture/skip"},{"name":".skipJsErrors()","id":"404025","url":"/documentation/404025/reference/test-api/fixture/skipjserrors"}]},{"name":"Global Functions","id":"402632/Test API/Global Functions","items":[{"name":"fixture()","id":"402775","url":"/documentation/402775/reference/test-api/global/fixture"},{"name":"test()","id":"402774","url":"/documentation/402774/reference/test-api/global/test"}]},{"name":"RequestLogger Class","id":"402668","url":"/documentation/402668/reference/test-api/requestlogger","items":[{"name":"Constructor","id":"402769","url":"/documentation/402769/reference/test-api/requestlogger/constructor"},{"name":".clear()","id":"402770","url":"/documentation/402770/reference/test-api/requestlogger/clear"},{"name":".contains()","id":"402768","url":"/documentation/402768/reference/test-api/requestlogger/contains"},{"name":".count()","id":"402767","url":"/documentation/402767/reference/test-api/requestlogger/count"},{"name":".requests","id":"402766","url":"/documentation/402766/reference/test-api/requestlogger/requests"}]},{"name":"RequestMock Class","id":"402667","url":"/documentation/402667/reference/test-api/requestmock","items":[{"name":"Constructor","id":"402765","url":"/documentation/402765/reference/test-api/requestmock/constructor"},{"name":".onRequestTo()","id":"402763","url":"/documentation/402763/reference/test-api/requestmock/onrequestto"},{"name":".onRequestTo.respond()","id":"402762","url":"/documentation/402762/reference/test-api/requestmock/respond"}]},{"name":"Selector Object","id":"402666","url":"/documentation/402666/reference/test-api/selector","items":[{"name":"Constructor","id":"402756","url":"/documentation/402756/reference/test-api/selector/constructor"},{"name":".addCustomDOMProperties()","id":"402759","url":"/documentation/402759/reference/test-api/selector/addcustomdomproperties"},{"name":".addCustomMethods()","id":"402758","url":"/documentation/402758/reference/test-api/selector/addcustommethods"},{"name":".child()","id":"402757","url":"/documentation/402757/reference/test-api/selector/child"},{"name":".count","id":"402755","url":"/documentation/402755/reference/test-api/selector/count"},{"name":".exists","id":"402754","url":"/documentation/402754/reference/test-api/selector/exists"},{"name":".filter()","id":"402753","url":"/documentation/402753/reference/test-api/selector/filter"},{"name":".filterHidden()","id":"402752","url":"/documentation/402752/reference/test-api/selector/filterhidden"},{"name":".filterVisible()","id":"402751","url":"/documentation/402751/reference/test-api/selector/filtervisible"},{"name":".find()","id":"402750","url":"/documentation/402750/reference/test-api/selector/find"},{"name":".nextSibling()","id":"402749","url":"/documentation/402749/reference/test-api/selector/nextsibling"},{"name":".nth()","id":"402748","url":"/documentation/402748/reference/test-api/selector/nth"},{"name":".parent()","id":"402747","url":"/documentation/402747/reference/test-api/selector/parent"},{"name":".prevSibling()","id":"402746","url":"/documentation/402746/reference/test-api/selector/prevsibling"},{"name":".shadowRoot()","id":"402745","url":"/documentation/402745/reference/test-api/selector/shadowroot"},{"name":".sibling()","id":"402744","url":"/documentation/402744/reference/test-api/selector/sibling"},{"name":".with()","id":"402743","url":"/documentation/402743/reference/test-api/selector/with"},{"name":".withAttribute()","id":"402742","url":"/documentation/402742/reference/test-api/selector/withattribute"},{"name":".withExactText()","id":"402741","url":"/documentation/402741/reference/test-api/selector/withexacttext"},{"name":".withText()","id":"402740","url":"/documentation/402740/reference/test-api/selector/withtext"}]},{"name":"TestController","id":"402665","url":"/documentation/402665/reference/test-api/testcontroller","items":[{"name":".addRequestHooks()","id":"402713","url":"/documentation/402713/reference/test-api/testcontroller/addrequesthooks"},{"name":".browser","id":"402712","url":"/documentation/402712/reference/test-api/testcontroller/browser"},{"name":".clearUpload()","id":"402711","url":"/documentation/402711/reference/test-api/testcontroller/clearupload"},{"name":".click()","id":"402710","url":"/documentation/402710/reference/test-api/testcontroller/click"},{"name":".closeWindow()","id":"402709","url":"/documentation/402709/reference/test-api/testcontroller/closewindow"},{"name":".ctx","id":"402708","url":"/documentation/402708/reference/test-api/testcontroller/ctx"},{"name":".debug()","id":"402707","url":"/documentation/402707/reference/test-api/testcontroller/debug"},{"name":".deleteCookies()","id":"403874","url":"/documentation/403874/reference/test-api/testcontroller/deletecookies"},{"name":".dispatchEvent()","id":"403091","url":"/documentation/403091/reference/test-api/testcontroller/dispatchevent"},{"name":".doubleClick()","id":"402706","url":"/documentation/402706/reference/test-api/testcontroller/doubleclick"},{"name":".drag()","id":"402705","url":"/documentation/402705/reference/test-api/testcontroller/drag"},{"name":".dragToElement()","id":"402704","url":"/documentation/402704/reference/test-api/testcontroller/dragtoelement"},{"name":".eval()","id":"402703","url":"/documentation/402703/reference/test-api/testcontroller/eval"},{"name":".expect()","id":"402702","url":"/documentation/402702/reference/test-api/testcontroller/expect"},{"name":".expect.contains()","id":"402729","url":"/documentation/402729/reference/test-api/testcontroller/expect/contains"},{"name":".expect.eql()","id":"402728","url":"/documentation/402728/reference/test-api/testcontroller/expect/eql"},{"name":".expect.gt()","id":"402727","url":"/documentation/402727/reference/test-api/testcontroller/expect/gt"},{"name":".expect.gte()","id":"402726","url":"/documentation/402726/reference/test-api/testcontroller/expect/gte"},{"name":".expect.lt()","id":"402725","url":"/documentation/402725/reference/test-api/testcontroller/expect/lt"},{"name":".expect.lte()","id":"402724","url":"/documentation/402724/reference/test-api/testcontroller/expect/lte"},{"name":".expect.match()","id":"402723","url":"/documentation/402723/reference/test-api/testcontroller/expect/match"},{"name":".expect.notContains()","id":"402722","url":"/documentation/402722/reference/test-api/testcontroller/expect/notcontains"},{"name":".expect.notEql()","id":"402721","url":"/documentation/402721/reference/test-api/testcontroller/expect/noteql"},{"name":".expect.notMatch()","id":"402720","url":"/documentation/402720/reference/test-api/testcontroller/expect/notmatch"},{"name":".expect.notOk()","id":"402719","url":"/documentation/402719/reference/test-api/testcontroller/expect/notok"},{"name":".expect.notTypeOf()","id":"402718","url":"/documentation/402718/reference/test-api/testcontroller/expect/nottypeof"},{"name":".expect.notWithin()","id":"402717","url":"/documentation/402717/reference/test-api/testcontroller/expect/notwithin"},{"name":".expect.ok()","id":"402716","url":"/documentation/402716/reference/test-api/testcontroller/expect/ok"},{"name":".expect.typeOf()","id":"402715","url":"/documentation/402715/reference/test-api/testcontroller/expect/typeof"},{"name":".expect.within()","id":"402714","url":"/documentation/402714/reference/test-api/testcontroller/expect/within"},{"name":".fixtureCtx","id":"402701","url":"/documentation/402701/reference/test-api/testcontroller/fixturectx"},{"name":".getBrowserConsoleMessages()","id":"402700","url":"/documentation/402700/reference/test-api/testcontroller/getbrowserconsolemessages"},{"name":".getCookies()","id":"403873","url":"/documentation/403873/reference/test-api/testcontroller/getcookies"},{"name":".getCurrentWindow()","id":"402699","url":"/documentation/402699/reference/test-api/testcontroller/getcurrentwindow"},{"name":".getNativeDialogHistory()","id":"402698","url":"/documentation/402698/reference/test-api/testcontroller/getnativedialoghistory"},{"name":".hover()","id":"402697","url":"/documentation/402697/reference/test-api/testcontroller/hover"},{"name":".maximizeWindow()","id":"402696","url":"/documentation/402696/reference/test-api/testcontroller/maximizewindow"},{"name":".navigateTo()","id":"402695","url":"/documentation/402695/reference/test-api/testcontroller/navigateto"},{"name":".openWindow()","id":"402694","url":"/documentation/402694/reference/test-api/testcontroller/openwindow"},{"name":".pressKey()","id":"402693","url":"/documentation/402693/reference/test-api/testcontroller/presskey"},{"name":".removeRequestHooks()","id":"402692","url":"/documentation/402692/reference/test-api/testcontroller/removerequesthooks"},{"name":".request()","id":"403981","url":"/documentation/403981/reference/test-api/testcontroller/request"},{"name":".resizeWindow()","id":"402691","url":"/documentation/402691/reference/test-api/testcontroller/resizewindow"},{"name":".resizeWindowToFitDevice()","id":"402690","url":"/documentation/402690/reference/test-api/testcontroller/resizewindowtofitdevice"},{"name":".rightClick()","id":"402689","url":"/documentation/402689/reference/test-api/testcontroller/rightclick"},{"name":".scroll()","id":"403065","url":"/documentation/403065/reference/test-api/testcontroller/scroll"},{"name":".scrollBy()","id":"403066","url":"/documentation/403066/reference/test-api/testcontroller/scrollby"},{"name":".scrollIntoView()","id":"403067","url":"/documentation/403067/reference/test-api/testcontroller/scrollintoview"},{"name":".selectEditableContent()","id":"402688","url":"/documentation/402688/reference/test-api/testcontroller/selecteditablecontent"},{"name":".selectText()","id":"402687","url":"/documentation/402687/reference/test-api/testcontroller/selecttext"},{"name":".selectTextAreaContent()","id":"402686","url":"/documentation/402686/reference/test-api/testcontroller/selecttextareacontent"},{"name":".setCookies()","id":"403872","url":"/documentation/403872/reference/test-api/testcontroller/setcookies"},{"name":".setFilesToUpload()","id":"402685","url":"/documentation/402685/reference/test-api/testcontroller/setfilestoupload"},{"name":".setNativeDialogHandler()","id":"402684","url":"/documentation/402684/reference/test-api/testcontroller/setnativedialoghandler"},{"name":".setPageLoadTimeout()","id":"402683","url":"/documentation/402683/reference/test-api/testcontroller/setpageloadtimeout"},{"name":".setTestSpeed()","id":"402682","url":"/documentation/402682/reference/test-api/testcontroller/settestspeed"},{"name":".skipJsErrors()","id":"404027","url":"/documentation/404027/reference/test-api/testcontroller/skipjserrors"},{"name":".switchToIframe()","id":"402681","url":"/documentation/402681/reference/test-api/testcontroller/switchtoiframe"},{"name":".switchToMainWindow()","id":"402680","url":"/documentation/402680/reference/test-api/testcontroller/switchtomainwindow"},{"name":".switchToParentWindow()","id":"402679","url":"/documentation/402679/reference/test-api/testcontroller/switchtoparentwindow"},{"name":".switchToPreviousWindow()","id":"402678","url":"/documentation/402678/reference/test-api/testcontroller/switchtopreviouswindow"},{"name":".switchToWindow()","id":"402677","url":"/documentation/402677/reference/test-api/testcontroller/switchtowindow"},{"name":".takeElementScreenshot()","id":"402676","url":"/documentation/402676/reference/test-api/testcontroller/takeelementscreenshot"},{"name":".takeScreenshot()","id":"402675","url":"/documentation/402675/reference/test-api/testcontroller/takescreenshot"},{"name":".typeText()","id":"402674","url":"/documentation/402674/reference/test-api/testcontroller/typetext"},{"name":".useRole()","id":"402673","url":"/documentation/402673/reference/test-api/testcontroller/userole"},{"name":".wait()","id":"402672","url":"/documentation/402672/reference/test-api/testcontroller/wait"},{"name":"Role","id":"402665/Role","items":[{"name":"Constructor","id":"402760","url":"/documentation/402760/reference/test-api/role/constructor"},{"name":".anonymous() Static","id":"402761","url":"/documentation/402761/reference/test-api/role/anonymous"}]}]}]},{"name":"TestCafe API","id":"402632/TestCafe API","items":[{"name":"BrowserConnection Object","id":"402643","url":"/documentation/402643/reference/testcafe-api/browserconnection","items":[{"name":"opened Event","id":"402664","url":"/documentation/402664/reference/testcafe-api/browserconnection/opened"},{"name":".url","id":"402663","url":"/documentation/402663/reference/testcafe-api/browserconnection/url"}]},{"name":"LiveModeRunner Object","id":"402642","url":"/documentation/402642/reference/testcafe-api/livemoderunner"},{"name":"Runner Object","id":"402641","url":"/documentation/402641/reference/testcafe-api/runner","items":[{"name":".browsers()","id":"402661","url":"/documentation/402661/reference/testcafe-api/runner/browsers"},{"name":".clientScripts()","id":"402660","url":"/documentation/402660/reference/testcafe-api/runner/clientscripts"},{"name":".compilerOptions()","id":"402659","url":"/documentation/402659/reference/testcafe-api/runner/compileroptions"},{"name":".concurrency()","id":"402658","url":"/documentation/402658/reference/testcafe-api/runner/concurrency"},{"name":".filter()","id":"402657","url":"/documentation/402657/reference/testcafe-api/runner/filter"},{"name":".reporter()","id":"402656","url":"/documentation/402656/reference/testcafe-api/runner/reporter"},{"name":".run()","id":"402655","url":"/documentation/402655/reference/testcafe-api/runner/run"},{"name":".screenshots()","id":"402654","url":"/documentation/402654/reference/testcafe-api/runner/screenshots"},{"name":".src()","id":"402653","url":"/documentation/402653/reference/testcafe-api/runner/src"},{"name":".startApp()","id":"402652","url":"/documentation/402652/reference/testcafe-api/runner/startapp"},{"name":".stop()","id":"402651","url":"/documentation/402651/reference/testcafe-api/runner/stop"},{"name":".tsConfigPath()","id":"402650","url":"/documentation/402650/reference/testcafe-api/runner/tsconfigpath"},{"name":".useProxy()","id":"402649","url":"/documentation/402649/reference/testcafe-api/runner/useproxy"},{"name":".video()","id":"402648","url":"/documentation/402648/reference/testcafe-api/runner/video"}]},{"name":"TestCafe Object","id":"402640","url":"/documentation/402640/reference/testcafe-api/testcafe","items":[{"name":".close()","id":"402647","url":"/documentation/402647/reference/testcafe-api/testcafe/close"},{"name":".createBrowserConnection()","id":"402646","url":"/documentation/402646/reference/testcafe-api/testcafe/createbrowserconnection"},{"name":".createLiveModeRunner()","id":"402645","url":"/documentation/402645/reference/testcafe-api/testcafe/createlivemoderunner"},{"name":".createRunner()","id":"402644","url":"/documentation/402644/reference/testcafe-api/testcafe/createrunner"}]},{"name":"Global","id":"402632/TestCafe API/Global","items":[{"name":"createTestCafe()","id":"402662","url":"/documentation/402662/reference/testcafe-api/global/createtestcafe"}]}]},{"name":"Plugin API","id":"402632/Plugin API","items":[{"name":"BrowserProvider Interface","id":"402791","url":"/documentation/402791/reference/plugin-api/browserprovider"},{"name":"Reporter Interface","id":"402790","url":"/documentation/402790/reference/plugin-api/reporter"}]}],"activeItems":[{"name":"Docs","id":"Docs","url":"/documentation/402635/guides/overview/getting-started"},{"name":"API","id":"402632","url":"/documentation/402632/api"},{"name":"Configuration File","id":"402638","url":"/documentation/402638/reference/configuration-file"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Docs","id":"Docs","url":"/documentation/402635/guides/overview/getting-started"},{"name":"API","id":"402632","url":"/documentation/402632/api"},{"name":"Configuration File","id":"402638","url":"/documentation/402638/reference/configuration-file"}],"publishDates":{"teamBlog":[1680566400000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}